[{"documents":[{"i":61,"t":"Milkomedaを始めよう","u":"/milkomeda-documentation/ja/","b":[]},{"i":71,"t":"開発者向け","u":"/milkomeda-documentation/ja/algorand/for-developers/","b":["Algorand","開発者向け"]},{"i":73,"t":"MetaMaskの設定","u":"/milkomeda-documentation/ja/algorand/for-developers/configuring-metamask","b":["Algorand","開発者向け"]},{"i":75,"t":"スマート コントラクトのデプロイ","u":"/milkomeda-documentation/ja/algorand/for-developers/deploying-a-smart-contract","b":["Algorand","開発者向け"]},{"i":77,"t":"テストALGOの取得","u":"/milkomeda-documentation/ja/algorand/for-developers/obtaining-test-algo","b":["Algorand","開発者向け"]},{"i":79,"t":"資産のラッピング","u":"/milkomeda-documentation/ja/algorand/for-developers/wrapping-assets","b":["Algorand","開発者向け"]},{"i":81,"t":"開発者向け","u":"/milkomeda-documentation/ja/cardano/for-developers/","b":["Cardano","開発者向け"]},{"i":83,"t":"Flintウォレットの設定","u":"/milkomeda-documentation/ja/cardano/for-developers/configuring-flint-for-devs","b":["Cardano","開発者向け"]},{"i":85,"t":"MetaMaskの設定","u":"/milkomeda-documentation/ja/cardano/for-developers/configuring-metamask-for-devs","b":["Cardano","開発者向け"]},{"i":87,"t":"スマート コントラクトのデプロイ","u":"/milkomeda-documentation/ja/cardano/for-developers/deploying-a-smart-contract","b":["Cardano","開発者向け"]},{"i":89,"t":"Test ADAの取得","u":"/milkomeda-documentation/ja/cardano/for-developers/obtaining-test-ada","b":["Cardano","開発者向け"]},{"i":91,"t":"資産のラッピング解除","u":"/milkomeda-documentation/ja/cardano/for-developers/unwrapping-assets-for-devs","b":["Cardano","開発者向け"]},{"i":93,"t":"ウォレットの連携","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","b":["Cardano","開発者向け"]},{"i":103,"t":"資産のラッピング","u":"/milkomeda-documentation/ja/cardano/for-developers/wrapping-assets-for-devs","b":["Cardano","開発者向け"]},{"i":105,"t":"エンドユーザー向け","u":"/milkomeda-documentation/ja/cardano/for-end-users/","b":["Cardano","エンドユーザー向け"]},{"i":107,"t":"Cardano Bridgeがサポートするネイティブアセット","u":"/milkomeda-documentation/ja/cardano/for-end-users/cardano-bridge-supported-native-assets","b":["Cardano","エンドユーザー向け"]},{"i":109,"t":"Flintウォレットの設定","u":"/milkomeda-documentation/ja/cardano/for-end-users/configuring-flint-wallet","b":["Cardano","エンドユーザー向け"]},{"i":111,"t":"MetaMaskの設定","u":"/milkomeda-documentation/ja/cardano/for-end-users/configuring-metamask","b":["Cardano","エンドユーザー向け"]},{"i":113,"t":"MilkADAの取得","u":"/milkomeda-documentation/ja/cardano/for-end-users/obtaining-milkada","b":["Cardano","エンドユーザー向け"]},{"i":115,"t":"資産のラッピング解除","u":"/milkomeda-documentation/ja/cardano/for-end-users/unwrapping-assets","b":["Cardano","エンドユーザー向け"]},{"i":117,"t":"サポート","u":"/milkomeda-documentation/ja/get-help","b":[]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/61",[0,2.874]],["t/71",[1,0.694]],["t/73",[2,1.967]],["t/75",[1,0.749]],["t/77",[3,2.874]],["t/79",[1,0.694]],["t/81",[1,0.694]],["t/83",[4,2.327]],["t/85",[2,1.967]],["t/87",[1,0.749]],["t/89",[5,2.101,6,2.101]],["t/91",[1,0.694]],["t/93",[1,0.694]],["t/103",[1,0.694]],["t/105",[1,0.694]],["t/107",[7,2.101,8,2.101]],["t/109",[4,2.327]],["t/111",[2,1.967]],["t/113",[9,2.874]],["t/115",[1,0.694]],["t/117",[1,0.694]]],"invertedIndex":[["",{"_index":1,"t":{"71":{"position":[[0,5]]},"75":{"position":[[0,4],[5,11]]},"79":{"position":[[0,8]]},"81":{"position":[[0,5]]},"87":{"position":[[0,4],[5,11]]},"91":{"position":[[0,10]]},"93":{"position":[[0,8]]},"103":{"position":[[0,8]]},"105":{"position":[[0,9]]},"115":{"position":[[0,10]]},"117":{"position":[[0,4]]}}}],["ada",{"_index":6,"t":{"89":{"position":[[5,6]]}}}],["algo",{"_index":3,"t":{"77":{"position":[[0,10]]}}}],["bridg",{"_index":8,"t":{"107":{"position":[[8,22]]}}}],["cardano",{"_index":7,"t":{"107":{"position":[[0,7]]}}}],["flint",{"_index":4,"t":{"83":{"position":[[0,13]]},"109":{"position":[[0,13]]}}}],["metamask",{"_index":2,"t":{"73":{"position":[[0,11]]},"85":{"position":[[0,11]]},"111":{"position":[[0,11]]}}}],["milkada",{"_index":9,"t":{"113":{"position":[[0,10]]}}}],["milkomeda",{"_index":0,"t":{"61":{"position":[[0,14]]}}}],["test",{"_index":5,"t":{"89":{"position":[[0,4]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":63,"t":"Milkomedaとは","u":"/milkomeda-documentation/ja/","h":"#milkomedaとは","p":61},{"i":65,"t":"Milkomedaの特徴","u":"/milkomeda-documentation/ja/","h":"#milkomedaの特徴","p":61},{"i":67,"t":"エンドユーザー向けスタートガイド","u":"/milkomeda-documentation/ja/","h":"#エンドユーザー向けスタートガイド","p":61},{"i":69,"t":"開発者向けスタートガイド","u":"/milkomeda-documentation/ja/","h":"#開発者向けスタートガイド","p":61},{"i":95,"t":"分散型金融の未来を構築する","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#分散型金融の未来を構築する","p":93},{"i":97,"t":"ウォレットとMilkomedaプロトコルの連携","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#ウォレットとmilkomedaプロトコルの連携","p":93},{"i":99,"t":"milkomeda-js-sdkパッケージの詳細","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#milkomeda-js-sdkパッケージの詳細","p":93},{"i":101,"t":"Milkomeda REST API","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#milkomeda-rest-api","p":93},{"i":119,"t":"Milkomedaのプロジェクト開発状況をフォローする","u":"/milkomeda-documentation/ja/get-help","h":"","p":117}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/63",[0,0.493]],["t/65",[0,0.493]],["t/67",[1,1.201]],["t/69",[1,1.201]],["t/95",[1,1.201]],["t/97",[0,0.493]],["t/99",[0,0.299,2,1.317,3,1.317]],["t/101",[0,0.299,4,1.317,5,1.317]],["t/119",[0,0.493]]],"invertedIndex":[["",{"_index":1,"t":{"67":{"position":[[0,16]]},"69":{"position":[[0,12]]},"95":{"position":[[0,13]]}}}],["api",{"_index":5,"t":{"101":{"position":[[15,3]]}}}],["js",{"_index":2,"t":{"99":{"position":[[10,2]]}}}],["milkomeda",{"_index":0,"t":{"63":{"position":[[0,11]]},"65":{"position":[[0,12]]},"97":{"position":[[0,23]]},"99":{"position":[[0,9]]},"101":{"position":[[0,9]]},"119":{"position":[[0,27]]}}}],["rest",{"_index":4,"t":{"101":{"position":[[10,4]]}}}],["sdk",{"_index":3,"t":{"99":{"position":[[13,11]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":62,"t":"Milkomeda は、非EVMブロックチェーンにEVM機能を提供する革新的なプロトコルです。 今後Milkomedaは、Cardano、Solana、Algorandなど主要なブロックチェーン向けにL2ソリューション（ロールアップ）の提供を拡大する予定です。 現時点では、Cardanoに接続されたEVMベースのサイドチェーンが稼働しています。 これをMilkomeda C1サイドチェーンと呼んでいます。 このガイドでは、すぐにMilkomedaの利用を開始できるステップをご紹介します。","s":"Milkomedaを始めよう","u":"/milkomeda-documentation/ja/","h":"","p":61},{"i":64,"t":"Milkomedaは非EVMのエコシステムに、EVMベースのエコシステムのロールアップやSolidityサポートなどの主要な要素を引き継ぐ機能を提供します。 開発者は、EVMエコシステムのすべてのツールにアクセスできます。 構築、デプロイ、デバッグ、監査はEthereumと同じように動作します。 開発者はEthereumからプロジェクトを移植できるので、サポートされるL1ブロックチェーンで利用できるdAppの選択肢が大幅に広がります。 デプロイメント間でセキュリティの一貫性を維持します。マルチチェーン展開されたコードは共通のセキュリティプロパティが設定され、チェーンごとに個別に監査する必要がなくなります。 将来提供されるゼロ知識テクノロジーに基づくイノベーションは、Milkomedaを基盤とするL3+ソリューションとして実装されます。 スタートアップはMilkomedaにより、スマートコントラクト（Solidity）最大のコミュニティの人材やリソースを活用して、Cardano、Algorand、Solanaなどのチェーンを構築することができます。","s":"Milkomedaとは","u":"/milkomeda-documentation/ja/","h":"#milkomedaとは","p":61},{"i":66,"t":"拡張性: Milkomedaは長期的な観点での分散化を実現しつつ、1秒あたり数百のトランザクションの処理へと拡張が可能です。 セキュリティ: ロードマップの主要なポイントでの監査によりプロトコルのセキュリティを確保しつつ、すべてのチェーンのロールアップの機能を活用することを目的としています。 ユーザーエクスペリエンス: ウォレットとのコラボレーションにより、資産を簡単にMilkomedaに移行できます。 相互運用性: まずSolidity（EVM）のサポートを提供し、その後Cairoなどにも拡大します。 ポータビリティ: 一度コードを作成すれば、セキュリティを確保しつつあらゆる場所にデプロイできます。 開発者エクスペリエンス: 開発者はEthereumのすべてのツールやリソースを直接利用できます。","s":"Milkomedaの特徴","u":"/milkomeda-documentation/ja/","h":"#milkomedaの特徴","p":61},{"i":68,"t":"エンドユーザーはCardanoメインネットからブリッジアドレスにADAを送信して、Milkomeda C1サイドチェーンでラッピングされたADAを受け取ることができます。 エンドユーザー向けスタートガイドに進み、FlintとMetaMaskの設定を開始しましょう。","s":"エンドユーザー向けスタートガイド","u":"/milkomeda-documentation/ja/","h":"#エンドユーザー向けスタートガイド","p":61},{"i":70,"t":"手数料やガスのためにADAをラッピングするMilkomeda C1サイドチェーンのメインネットバージョンに加え、開発者はMilkomeda Devnetにアクセスして、Cardano Testnetからの資産をラッピングし、手数料やガス用にラッピングされたテストADAを使ってMilkomeda C1 Devnetサイドチェーン上にスマートコントラクトをデプロイすることもできます。 次のページでFlintウォレットを設定し、Cardano TestnetフォーセットからテストADAを取得しましょう。","s":"開発者向けスタートガイド","u":"/milkomeda-documentation/ja/","h":"#開発者向けスタートガイド","p":61},{"i":72,"t":"現時点でご利用いただけるのはAlgorand Rollup Testnetのみですが、広範囲にわたるQAと主要な監査による最終確認の後、今四半期中にAlgorand Rollup Mainnetの提供を開始する見込みです。 Milkomeda A1 Devnet（MilkomdeaのAlgorand Rollup Testnet）は、テストALGOを用いて正式なAlgorand Testnetとやり取りを行います。 操作に慣れるため、まずはDevnetをご利用になることをおすすめします。 Devnetの使い方を理解できれば、今後提供されるメインネットも同じように操作できます。 これからご紹介する事例では、Devnetへの接続を設定する方法をご説明します。 メインネットを使用するためのパラメーターや手順については、本ドキュメントに赤い文字で追加される予定です。","s":"開発者向け","u":"/milkomeda-documentation/ja/algorand/for-developers/","h":"","p":71},{"i":74,"t":"AlgorandテストネットウォレットとテストALGOの用意ができたら、次は MilkTALGOを受け取ることのできるMilkomeda Algorand Testnet Rollupのアドレスが必要です。 現時点では、このステップにはMetaMaskを使用することをおすすめしています。 まず、Chrome用MetaMaskをインストールします。 次にChrome拡張機能アイコンをクリックして、MetaMaskを選択します。 MetaMaskのウィンドウ内の「Get Started（開始する）」をクリックして、次に「Create a Wallet（ウォレットを作成）」を選択します。 ウォレットのパスワードを設定します。この後に設定画面が表示されるので、クリックして先に進みます。 完了すると、以下のような空のウォレットが新たに作成されます。 MetaMask画面の右上のネットワークドロップダウンを選択します。 ドロップダウンリストから「Add Network（ネットワークを追加）」を選択して、以下の内容を入力します。 Network Name: Milkomeda Algorand Testnet New RPC URL: https://rpc-devnet-algorand-rollup.a1.milkomeda.com Chain ID: 200202 Currency Symbol (Optional): milkTALGO Block Explorer URL (Optional): https://testnet-algorand-rollup.a1.milkomeda.com 「**Save**（保存）」をクリックすると、ネットワークドロップダウンに「**Milkomeda Algorand Testnet**」が表示されます。 以下のとおり、アカウント名をクリックして、Milkomeda Algorand Testnetウォレットアドレスをクリップボードにコピーします。 次に、Milkomeda A1ブリッジに戻り、テストALGOをラッピングします。","s":"MetaMaskの設定","u":"/milkomeda-documentation/ja/algorand/for-developers/configuring-metamask","h":"","p":73},{"i":76,"t":"SolidityスマートコントラクトをMilkomeda A1ロールアップにデプロイする方法を説明します。 今回は例として、コントラクトのデプロイにRemixを使用します。 Remixにアクセスするには、こちらのリンクをクリックしてください: Remix IDE まず、Solidityスマートコントラクトのファイルを作成します。 Remixウィンドウの左パネルで「Contracts（コントラクト）」フォルダーをクリックして、次に中央パネルの「New File（新規ファイル）」ボタンをクリックします。 すると、新しいSolidityスマートコントラクトのファイル名を入力するように求められます。 ファイル名は任意で設定して構いません。ここでは、ERC-20スマートコントラクトのデプロイを行うため、「Test_ERC20.sol」というファイル名をつけることにしましょう。 ファイル名を入力して、Enterを押します。 カーソルが編集パネルに移動するので、Solidityコードを入力します。 コードは以下のとおりです。 pragma solidity ^0.7.0; import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0-solc-0.7/contracts/token/ERC20/ERC20.sol\"; contract Token is ERC20 { constructor () ERC20(\"Token\", \"TKN\") { _mint(msg.sender, 1000000 * (10 ** uint256(decimals()))); } } 次に画面の左側に表示される「Solidity compiler（Solidityコンパイラー）」アイコンをクリックして、コンパイラーのバージョンを選択します（この例では0.7.6+commit.7338295fを使用しています）。次に、以下のとおり「Compile Test_ERC20.sol」をクリックします。 左側の「Deploy and run transactions（トランザクションのデプロイと実行）」アイコンをクリックして、以下のとおり「Environment（環境）」プルダウンから「Injected Web3」を選択します。 MetaMaskの画面が表示されるので、「Next（次へ）」をクリックして「Connect（接続）」を選択し、C1ウォレットをRemixに接続します。 MetaMaskウォレットが接続されたら「Deploy（デプロイ）」ボタンをクリックして、Milkomeda A1 Rollupにスマートコントラクトをデプロイします。 MetaMaskでトランザクションを確認します。 Remix IDE画面の左側にある「Deployed Contracts（デプロイ済みのコントラクト）」には、次のように表示されます。 ERC20スマートコントラクトのアドレスをコピーしたら、Metamaskでこれを使って作成したトークンを追加することができます。 Import tokensをクリックして、コントラクトのアドレスを貼り付けます。 Add Custom Tokenをクリックすると、トークンが表示されます。 このトークンを送信して、スマートコントラクトとのインタラクションを実行できます。","s":"スマート コントラクトのデプロイ","u":"/milkomeda-documentation/ja/algorand/for-developers/deploying-a-smart-contract","h":"","p":75},{"i":78,"t":"はじめに、公式のTestnetディスペンサー https://testnet.algoexplorer.io/dispenser からTestnet ALGOを取得することをおすすめします。 また現時点では、Milkomeda A1ブリッジとの互換性を持つTestnetウォレットを設定する際には、MyAlgoウォレット https://wallet.myalgo.com/ を使用することをおすすめしています（AlgorandテストネットとRollupの間で資金を移動するために必要です）。 数分待つと（通常は2分程度）、Algorand TestnetウォレットにtALGOが表示されます。 次にMetaMaskを設定して、Milkomeda A1 Algorand Rollupのアドレスを取得します。","s":"テストALGOの取得","u":"/milkomeda-documentation/ja/algorand/for-developers/obtaining-test-algo","h":"","p":77},{"i":80,"t":"Milkomeda A1ブリッジのページ https://algorand-bridge-dev.milkomeda.com/ にアクセスして、移動したいトークンを選択します（当初はtALGOのみ）。 次にMyAlgoウォレットを、次にMetamaskを接続します。 最後に、Rollupに移動するトークンの金額を入力します。 「Continue（続行）」をクリックします。 確認画面でSign and Sendをクリックして、ウォレットのパスワードを入力して確認します。 パスワードの確認に約20秒かかる場合があります。 Rollupからのトランザクションは、Algorand Testnetブロックチェーン自体に書き込まれることに ご注意ください。 1回目の確認は資金をウォレットからブリッジのアドレスに送信するためのもので、2回目の確認はAlgorandでのロールアップバッチのトランザクションのためです。 送信に必要な確認は全部で2回で、約20秒かかります（Algorandでは4.5秒、Rollupのバッチでは約14秒かかります）。 トランザクションを確認すると、送信したMilkTALGOがMetaMaskのMilkomeda Algorand Testnetウォレットに表示されます。 これで、Milkomeda A1 Algorand Rollup Testnetで使用するため、テストALGOをMilkTALGOにラッピングすることができました。次はスマートコントラクトのサンプルをデプロイします。","s":"資産のラッピング","u":"/milkomeda-documentation/ja/algorand/for-developers/wrapping-assets","h":"","p":79},{"i":82,"t":"Milkomeda C1サイドチェーンでは、現在2つのバージョンが動作しています。 1つはDevnetバージョンで、テストADAを使ってCardano Testnetとインタラクションを行います。 もう1つはメインネットバージョンで、リアルADAを使ってCardanoメインネットとインタラクションを行います。 操作に慣れるため、まずはDevnetをご利用になることをおすすめします。 Devnetの使い方を理解できれば、メインネットも同じように操作できます。 これから紹介する手順の例では、Devnetへの接続を設定する方法を紹介しています。赤字の部分は、メインネットで使用するパラメーターや手順を示しています。 はじめに、Flintウォレットをインストールします。 次のページに移動して、手順を開始しましょう。","s":"開発者向け","u":"/milkomeda-documentation/ja/cardano/for-developers/","h":"","p":81},{"i":84,"t":"FlintウォレットはChrome拡張機能で、DeFiとNFTに対応した信頼性の高い軽量ウォレットです。 Flintの現在のバージョンでは、Cardano Testnetウォレットを作成し、「Milkomedaモード」を有効にして、Milkomeda C1サイドチェーンにトランザクションを送信することができます。 Flintウォレットをインストールするには、Chromeブラウザーで以下のリンクにアクセスして、「Chromeに追加」ボタンをクリックします。Flint ウォレットをインストール インストールが完了したら、Chromeウィンドウ右上の拡張機能アイコンをクリックして、Flintウォレットを選択します。 Flintのウィンドウで、最初の警告画面に続いて表示される「Let’s Begin（開始する）」をクリックします。言語を選択したら、「I agree（同意します）」をクリックしてください。以下の画面が表示されたら、「Testnet（テストネット）」ボタンを選択します。 情報 Milkomeda C1メインネットバージョンでリアルADAを使用するには、「Mainnet（メインネット）」をクリックしてCardanoメインネットウォレットを作成します。 次に「Confirm（決定）」、「Create a new wallet（新しいウォレットを作成）」をクリックして、復元フレーズをメモなどに控えます。 次の画面で復元フレーズを確認し、ウォレットのパスワードを設定して、「Create my wallet（ウォレットを作成）」をクリックします。 今回はアプリのパスコードの画面では「Skip（スキップ）」を選択して問題ありません。次に「Finish（完了）」をクリックします。 以下のように、Cardano Testnetウォレットが作成されます。 次にCardano Testnetフォーセットにアクセスして、テストADAを取得しましょう。","s":"Flintウォレットの設定","u":"/milkomeda-documentation/ja/cardano/for-developers/configuring-flint-for-devs","h":"","p":83},{"i":86,"t":"Cardano Testnetウォレットを作成してテストADAを取得したら、Milkomeda Cardano Testnetサイドチェーン上でMilkTADAを受け取ることのできるアドレスが必要です。 現時点では、このステップにはMetaMaskを使用することをおすすめしています。 まず、Chrome用MetaMaskをインストールします。 次にChrome拡張機能アイコンをクリックして、MetaMaskを選択します。 MetaMaskのウィンドウ内の「Get Started（開始する）」をクリックして、次に「Create a Wallet（ウォレットを作成）」を選択します。 ウォレットのパスワードを設定します。この後に設定画面が表示されるので、クリックして先に進みます。 完了すると、以下のような空のウォレットが新たに作成されます。 MetaMask画面の右上のネットワークドロップダウンを選択します。 ドロップダウンリストから「Add Network（ネットワークを追加）」を選択して、以下の内容を入力します。 Network Name: Milkomeda Cardano Testnet New RPC URL: https://rpc-devnet-cardano-evm.c1.milkomeda.com Chain ID: 200101 Currency Symbol (Optional): milkTADA Block Explorer URL (Optional): https://explorer-devnet-cardano-evm.c1.milkomeda.com WebSocketエンドポイントが必要な場合は、次を使用します。wss://rpc-devnet-cardano-evm.c1.milkomeda.com 情報 Milkomeda C1メインネットバージョンを使用する場合、パラメーターは以下を入力してください。 Network Name: Milkomeda Cardano (C1) New RPC URL: https://rpc-mainnet-cardano-evm.c1.milkomeda.com Chain ID: 2001 Currency Symbol: milkADA Block Explorer URL: https://explorer-mainnet-cardano-evm.c1.milkomeda.com WebSocketエンドポイントが必要な場合は、次を使用します。wss://rpc-mainnet-cardano-evm.c1.milkomeda.com ::: 「Save（保存）」をクリックすると、ネットワークドロップダウンに「Milkomeda Cardano Testnet」が表示されます。 以下のとおり、アカウント名をクリックして、Milkomeda Cardano Testnetウォレットアドレスをクリップボードにコピーします。 次に、Flintウォレットに戻り、テストADAをラッピングします。","s":"MetaMaskの設定","u":"/milkomeda-documentation/ja/cardano/for-developers/configuring-metamask-for-devs","h":"","p":85},{"i":88,"t":"SolidityスマートコントラクトをMilkomeda C1サイドチェーンにデプロイする方法を説明します。 今回は例として、コントラクトのデプロイにRemixを使用します。 Remixにアクセスするには、こちらのリンクをクリックしてください: Remix IDE まず、Solidityスマートコントラクトのファイルを作成します。 Remixウィンドウの左パネルで「Contracts（コントラクト）」フォルダーをクリックして、次に中央パネルの「New File（新規ファイル）」ボタンをクリックします。 すると、新しいSolidityスマートコントラクトのファイル名を入力するように求められます。 ファイル名は任意で設定して構いません。ここでは、ERC-20スマートコントラクトのデプロイを行うため、「Test_ERC20.sol」というファイル名をつけることにしましょう。 ファイル名を入力して、Enterを押します。 カーソルが編集パネルに移動するので、Solidityコードを入力します。 コードは以下のとおりです。 pragma solidity ^0.7.0; import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0-solc-0.7/contracts/token/ERC20/ERC20.sol\"; contract Token is ERC20 { constructor () ERC20(\"Token\", \"TKN\") { _mint(msg.sender, 1000000 * (10 ** uint256(decimals()))); } } 次に画面の左側に表示される「Solidity compiler（Solidityコンパイラー）」アイコンをクリックして、コンパイラーのバージョンを選択します（この例では0.7.6+commit.7338295fを使用しています）。次に、以下の通り「Compile Test_ERC20.sol」をクリックします。 左側の「Deploy and run transactions（トランザクションのデプロイと実行）」アイコンをクリックして、以下のとおり「Environment（環境）」プルダウンから「Injected Web3」を選択します。 MetaMaskの画面が表示されるので、「Next（次へ）」をクリックして「Connect（接続）」を選択し、C1ウォレットをRemixに接続します。 MetaMaskウォレットが接続されたら「Deploy（デプロイ）」ボタンをクリックして、Milkomeda C1サイドチェーンにスマートコントラクトをデプロイします。 MetaMaskでトランザクションを確認します。 Remix IDE画面の左側にある「Deployed Contracts（デプロイ済みのコントラクト）」には、次のように表示されます。 最後に、Cardano TestnetでmilkTADAのラッピングを解除して、tADAに戻す方法を確認しましょう。","s":"スマート コントラクトのデプロイ","u":"/milkomeda-documentation/ja/cardano/for-developers/deploying-a-smart-contract","h":"","p":87},{"i":90,"t":"Cardano TestnetフォーセットからテストADAを受け取る準備ができました。 情報 Milkomeda C1メインネットバージョンでリアルADAを使用する場合は、この手順を飛ばして次のページに進みます。 Flintウォレットのウィンドウで「Receive（受け取る）」をクリックします。 「Receive（受け取る）」ウィンドウで「Copy Address（アドレスをコピー）」をクリックしてCardano Testnetウォレットのアドレスをクリップボードにコピーし、以下の通り、画面下部の「Testnet faucet (tADA)（テストネットフォーセット（tADA））」をクリックします。 ​ これにより、次のリンク先に移動します。Cardano Testnetフォーセット この画面でドロップダウンメニューから「tAda」を選択し、「Address（アドレス）」欄にCardano Testnetウォレットのアドレスを貼り付けます。 「API Key」欄は空白のままで構いません。 Captchaを完了したら、「Request funds（資金をリクエストする）」をクリックします。 数分待つと（通常は5分程度）、Cardano TestnetウォレットにtADAが表示されます。 次にMetaMaskを設定して、Milkomeda C1サイドチェーンのアドレスを取得します。","s":"Test ADAの取得","u":"/milkomeda-documentation/ja/cardano/for-developers/obtaining-test-ada","h":"","p":89},{"i":92,"t":"Milkomeda Cardano Unwrap BridgeはMilkomeda Cardano TestnetからCardanoメインネットに資産を移動するためのツールです。 以下の手順に従ってmilkTADAのラッピングを解除し、Cardano TestnetウォレットでtADAを受け取りましょう。 はじめに、Milkomeda Cardano Unwrap Bridge for DevnetにアクセスしてMetaMaskウォレットを接続します。 ラッピングを解除するmilkADAの金額を入力し、「To」欄に自分のCardano Testnetウォレットのアドレスを貼り付けます。 「Next Step（次へ）」ボタンをクリックします。 MetaMaskで操作を確認します。 約3～5分で必要なトランザクションが確認されると、Cardano TestnetウォレットでtADAのラッピングが解除されたのを確認できます。","s":"資産のラッピング解除","u":"/milkomeda-documentation/ja/cardano/for-developers/unwrapping-assets-for-devs","h":"","p":91},{"i":94,"t":"web3ウォレットやその他のdAppをMilkomedaと連携させる方法","s":"ウォレットの連携","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"","p":93},{"i":96,"t":"以下では、milkomeda-js-sdkパッケージを使ってMilkomeda上でweb3ウォレットを連携させる方法をご説明します。","s":"分散型金融の未来を構築する","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#分散型金融の未来を構築する","p":93},{"i":98,"t":"1. milkomeda-js-sdkパッケージをダウンロードする milkomeda-js-sdkパッケージにはこちらからアクセスできます。 このパッケージは、Milkomedaデプロイメントの静的設定をホストしています。 情報 これを利用すると、それぞれのプロジェクトでMilkomedaのハードコーディングの静的設定を連携する必要がなくなります。 2. milkomeda-js-sdkパッケージをインストールする npmを使ってパッケージをインストールする場合： npm i @dcspark/milkomeda-js-sdk yarnを使ってパッケージをインストールする場合： yarn add @dcspark/milkomeda-js-sdk 3. パッケージをプロジェクトにインポートする importを使用する： import { generateMilkomedaMetadata, milkomedaNetworks } from \"@dcspark/milkomeda-js-sdk\"; requireを使用する： const milkomedaJsSdk = require(\"@dcspark/milkomeda-js-sdk\");","s":"ウォレットとMilkomedaプロトコルの連携","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#ウォレットとmilkomedaプロトコルの連携","p":93},{"i":100,"t":"Milkomeda-js-sdkは、Milkomedaデプロイメントの静的設定をホストするパッケージです。 これを利用すると、それぞれのプロジェクトでMilkomedaのハードコーディングの静的設定を連携する必要がなくなります。 パラメーター 概要 isMainnet 特定のネットワークの構成がメインネット（Cardanoなど）かどうかを示すブーリアン mainchain プロトコルやIDなど、メインチェーンの情報から構成される sidechain プロトコル名（MilkomedaC1など）やサイドチェーンIDなど、サイドチェーンの情報から構成される backendEndpoint サイドチェーンの特定のバージョンについての追加情報を示す、サービスのURL値を提供する protocolMagic 適切なMilkomedaネットワークと互換性のあるプロトコルマジックを導入する timeIntervalForAddressMs ミリ秒単位で定義された、アドレスを変更する際に必要となる時間の間隔 sidechainContract 任意のクライアントが接続できるサイドチェーンコントラクトのアドレス 公開されたペイロードの例​ 以下は、Milkomedaネットワーク（Devnet）のペイロードを公開した例です。 { [NETWORK_NAME]: { isMainnet: false, name: NETWORK_NAME, mainchain: { protocol: ProtocolNames.cardanoProtocol, id: toChainId({ networkId: registry.Testnet.NetworkId, networkMagic: registry.Testnet.NetworkMagic }) }, sidechain: { protocol: ProtocolNames.evmProtocol, id: 200101 }, backendEndpoint: BackendEndpoints.devnet, protocolMagic: ProtocolMagic.devnet, timeIntervalForAddressMs: 86400000, sidechainContract: \"0x000000000000000000000000000000000000BbBB\" }, } さらに、パッケージはMilkomedaのトランザクションに適したメタデータを作成するのに役立つヘルパーの型と関数を利用しています。 # Milkomeda metadata generator generateMilkomedaMetadata( address, # address is EVM address protocolMagic # protocol magic for specific network ) トランザクションのメタデータは2つのパラメーターで構成されます。プロトコルマジック&EVMアドレスです。 テストネットトランザクションの一般的なメタデータは以下の通りです。 { 87: \"devnet.cardano-evm.c1\" 88: \"0xEVM_TESTNET_ADDRESS\" } トランザクションのMilkomedaメタデータを生成した例​ generateMilkomedaMetadata(\"0x000… \", milkomedaNetworks[\"c1-devnet\"].protocolMagic); 情報 「0x000...」をEVMアドレスに置き換えてください","s":"milkomeda-js-sdkパッケージの詳細","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#milkomeda-js-sdkパッケージの詳細","p":93},{"i":102,"t":"Milkomedaサイドチェーンに関するデータを取得するREST APIについて、Milkomeda-js-sdkパッケージ以外のものを導入しました。 情報 この例では分かりやすくご説明するため、Flintウォレット連携を使っています。 REST APIのベースURLはmilkomeda-js-sdkを使ってbackendEndpointパラメーターとして提供されます。 以下のコードを使って、パッケージから取得することができます。 Devnet Mainnet milkomedaNetworks[\"c1-devnet\"].backendEndpoint 情報 結果: https://allowlist.flint-wallet.com ベースURLがコードに含まれる場合、以下のエンドポイントのいずれかを使用できます。 Stargate address (V1/stargate) milkomedaNetworks[\"c1-mainnet\"].backendEndpoint 情報 結果: https://allowlist-mainnet.flint-wallet.com ウォレットをMilkomedaメインネットに連携させる場合、別のエンドポイントを2つ使ってネットワーク上で許可されたEVMアドレスを取得する必要があります。 この[microservice]（https://github.com/dcSpark/allowedlist-service/）の目的は、Milkomedaのブリッジを使用できるアドレスのリストを提供することです。 ベースURLがコードに含まれる場合、以下のエンドポイントのいずれかを使用できます。 Stargate address (/V1/stargate) fullAllowedList (/v1/fullAllowedList) メインネットで許可されたEVMアドレスの配列が返されます { \"allowList\": [\"0x...\", \"0x...\"] } isAddress=0x (/v1/isAddressAllowed?address=0x) 提供されたアドレスが制限されたメインネット上で許可されているかどうかを示すブール値を返します。 Milkomeda REST APIスターゲートエンドポイントを使うと、Devnetとメインネットで同じペイロードのプロパティを取得できます。 以下は、Devnetのペイロードの例です。 { \"current_address\": \"addr_test1wz6lvjg3anml96vl22mls5vae3x2cgaqwy2ewp5gj3fcxdcw652wz\", \"ttl_expiry\": 1646438400000, \"ada\": { \"minLovelace\": \"3000000\", \"fromADAFeeLovelace\": \"500000\", \"toADAFeeGWei\": \"500000\" }, \"assets\": [ { \"idCardano\": \"b4004c2f3edfdd2016d0fead9b927064f345534b000000000000000000000000\", \"idMilkomeda\": \"9c223e1dAf6184672E982d9AA560D9FD1d09A01B\", \"minCNTInt\": \"1\", \"minGWei\": \"1000000000\" } … ] } この記事やMilkomedaの連携についてご不明な点がありましたら、https://www.milkomeda.com/supportまたはDiscordサーバーよりお気軽にお問い合わせください。​","s":"Milkomeda REST API","u":"/milkomeda-documentation/ja/cardano/for-developers/wallet-integration","h":"#milkomeda-rest-api","p":93},{"i":104,"t":"Flintウォレットのウィンドウを開き、「Send（送る）」をクリックします。 次の画面で「Milkomedaモード」のトグルを切り替えて有効にします。Milkomeda C1ウォレットのアドレスを「Milkomeda Ethereum Address」欄に貼り付けて、送金する金額を入力します（例では300Test ADAを送金しています）。 「Continue（続行）」をクリックします。 確認画面でウォレットのパスワードを入力し、「Send（送る）」をクリックします。 送金には確認を10回行う必要があり、約5分かかります。 トランザクションを確認すると、送信したMilkTADAがMetaMaskのMilkomeda Cardano Testnetウォレットに表示されます。 トランザクションの手数料について Milkomeda C1サイドチェーンのみで行われるトランザクションの場合、ブロックプロデューサーが設定した、標準のMilkomedaネットワークトランザクション手数料のみを支払います。 ただし、ラッピングを含むトランザクション（CardanoとMilkomeda C1サイドチェーン間で資産が移動するトランザクション）の場合、1つのトランザクションがそれぞれのチェーンで行われるため、CardanoとMilkomeda両方のトランザクション手数料を支払う必要があります。 たとえば、CardanoからMilkomeda C1に資産を送信する場合、Cardano上で資産をロックするためのトランザクションが1つ、Milkomeda C1上でラッピングされた資産を発行するためのトランザクションが1つ必要です。 Flintウォレットでこのようなトランザクションを送信する場合、「Network Fee（ネットワーク手数料）」の項目を展開することで、「Base Fee（基本手数料）」（Cardanoトランザクション手数料）と「Milkomeda Fee（Milkomeda手数料）」を確認できます。 このようなトランザクションの「Milkomeda Fee（Milkomeda手数料）」は、資産をラッピングするという役割を担うブロックプロデューサーにも報酬を支払うことになるため、Milkomedaでの標準的なトランザクション手数料よりも若干高くなることに注意しましょう。 Milkomeda Cardano Testnetサイドチェーンで使用できるよう、テストADAをMilkTADAにラッピングすることができました。次に、スマートコントラクトのサンプルをデプロイしてみましょう。 MilkTADAとラッピングされたテストADA これまでご説明してきたとおり、MilkTADAは、Milkomeda Cardano Testnetサイドチェーンで手数料やガスを支払うためのベースとなる資産です。 テストADAをMilkomedaに移動させると、MilkTADAを受け取ることができます。 「ラッピングされたテストADA（wTADA）」は、Ethereum上のWETHと同様の機能を果たすERC20トークンです。 wTADAのコントラクトアドレスは以下のとおりです。 このアドレスにmilkTADAを送信してラッピングすることは可能ですが、このアドレスにwTADAを送信してラッピングを解除することはできません。スマートコントラクトの適切な方法を用いてインタラクションを実行してください。 wTADAコントラクトアドレス: 0x65a51E52eCD17B641f8F0D1d56a6c9738951FDC9 Cardanoメインネットを使用する場合、wADAコントラクトアドレスは以下のとおりです。 このアドレスにwADAを直接送信しないでください。 現時点では、wADAのラッピングを解除するにはDEXを使用する必要があります（または、スマートコントラクトと直接インタラクションを実行します）。 wADA contract address: 0xAE83571000aF4499798d1e3b0fA0070EB3A3E3F9 :::","s":"資産のラッピング","u":"/milkomeda-documentation/ja/cardano/for-developers/wrapping-assets-for-devs","h":"","p":103},{"i":106,"t":"Milkomeda C1サイドチェーンは、手数料やガスの支払いのベースとなる資産として、MilkADAを使用します。 サイドチェーンにアクセスするには、ADAの入ったCardanoウォレットと、MetaMaskブラウザ拡張機能が必要です。 次のページ以降で、FlintでCardanoウォレットを作成し、MetaMaskの設定によりMilkomeda C1アドレスを取得し、Milkomeda C1上でADAを送信してMilkADAに変換する手順を説明します。 はじめに、Flintウォレットをインストールします。 次のページに移動して、手順を開始しましょう。","s":"エンドユーザー向け","u":"/milkomeda-documentation/ja/cardano/for-end-users/","h":"","p":105},{"i":108,"t":"このセクションでは、CardanoへのMilkomeda Bridgeがサポートするネイティブトークンをすべてご紹介します。 サポート対象のネイティブアセットのラッピングやラッピング解除を実行するには、「エンドユーザー向け」セクションのステップごとのチュートリアルをもとに、milkADAを以下の表に示すトークンに置き換えてください。 情報 特定のネイティブアセットは、Milkomeda Token Registryに追加してからラッピングやラッピング解除の操作を実行する必要があることに注意してください。 したがって、以下のリストには制約があり、特定のネイティブトークンについてのみ許容されます。 サポート対象のMilkomedaネイティブアセットのリスト トークン名 トークンティッカー コントラクトアドレスの詳細 トークンの種類 GeroWallet GERO 0xeA55e366Eb0f4cFAAf8d83dC1fC7286F11b5b1cb ERC-20 Charli3 C3 0xdE482b84360c248C0d7260826a8B06a5A837235d ERC-20 CARD.STARTER CARDS 0xa350679eaFDb5836da9A796fF721a1fd8415c75F ERC-20 Occam OCX 0xf0c73E6287867bAa4F865A17EE711ec989c78AC0 ERC-20 IAGON IAG 0x658b95858457549cFC0af513b1b902aB0F6E6946 ERC-20 HOOSKY HOOSKY 0x13fe17701861b769d58f44c2cEBd918886d3D205 ERC-20 MUESLISWAP MILK MILK 0x386e685B5cBAa7bC06e3Dd2eEcDC56105076e4Fa ERC-20 World Mobile Token WMT 0x4D5C63c07463EFa5bb26EE0A6D8C39dd0e3DaBD9 ERC-20 Blueshift BLUES 0x8c008BBA2Dd56b99f4A6aB276bE3a478cB075F0C ERC-20 SundaeSWAP SUNDAE 0x771cc58a257a458b0A7C74382eA1C4EF856B80a8 ERC-20 WETH(Nomad) WETH 0x5950F9B6EF36f3127Ea66799e64D0ea1f5fdb9D1 ERC-20 WBTC(Nomad) WBTC 0x48AEB7584BA26D3791f06fBA360dB435B3d7A174 ERC-20 Tether USD(Nomad) USDT 0xab58DA63DFDd6B97EAaB3C94165Ef6f43d951fb2 ERC-20 USD Coin(Nomad) USDC 0x5a955FDdF055F2dE3281d99718f5f1531744B102 ERC-20 Wing Riders Token WRT 0xAA761861322Ca1cB8c0aCEB1471B3B5AF81de5A6 ERC-20 Milkomeda Cardano Unwrap Bridgeを使って特定のネイティブアセットのラッピングを解除する場合は、以下に示すとおり、ドロップダウンリストから選択してください。 :::info 対象のネイティブアセットを選択した後、いつでもその説明を確認することができます（例: MILKトークンを選択すると「MuesliSwapエコシステムを活用したユーティリティトークン」のように表示されます）。 :::","s":"Cardano Bridgeがサポートするネイティブアセット","u":"/milkomeda-documentation/ja/cardano/for-end-users/cardano-bridge-supported-native-assets","h":"","p":107},{"i":110,"t":"FlintウォレットはChrome拡張機能で、DeFiとNFTに対応した信頼性の高い便利な軽量ウォレットです。 Flintの現在のバージョンでは、「Milkomedaモード」を有効にして、Milkomeda C1サイドチェーンにトランザクションを送信することができます。 Flintウォレットをインストールするには、Chromeブラウザーで以下のリンクにアクセスして、「Chromeに追加」ボタンをクリックします。Flint ウォレットをインストール インストールが完了したら、Chromeウィンドウ右上の「パズルのピース」のアイコンをクリックして、拡張機能にアクセスします。 Flintを選択します。 Flintウォレットのウィンドウで、最初の警告画面に続いて表示される「Let’s Begin（開始する）」をクリックします。言語を選択したら、「I agree（同意します）」をクリックしてください。以下の画面が表示されたら、「Mainnet（メインネット）」ボタンを選択します。 次に「Confirm（決定）」、「Create a new wallet（新しいウォレットを作成）」をクリックして、復元フレーズをメモなどに控えます。 次の画面で復元フレーズを確認し、ウォレットのパスワードを設定して、「Create my wallet（ウォレットを作成）」をクリックします。 今回はアプリのパスコードの画面では「Skip（スキップ）」を選択して問題ありません。次に「Finish（完了）」をクリックします。 以下のように、Cardanoウォレットが作成されます。 次のステップに進むには、ウォレットにADAが入っている必要があります。 サポートが必要な場合や、この段階でトラブルが発生している場合は、このドキュメントの最後の「サポート」セクションをご参照ください。 次に、MetaMaskを設定してMilkomeda C1サイドチェーンに接続します。","s":"Flintウォレットの設定","u":"/milkomeda-documentation/ja/cardano/for-end-users/configuring-flint-wallet","h":"","p":109},{"i":112,"t":"次のステップでは、MilkADAを受け取ることのできる、Milkomeda C1サイドチェーン上のアドレスを取得します。 現時点では、このステップにはMetaMaskを使用することをおすすめしています。 まず、Chrome用MetaMaskをインストールします。 次にChrome拡張機能アイコンをクリックして、MetaMaskを選択します。 MetaMaskのウィンドウ内の「Get Started（開始する）」をクリックして、次に「Create a Wallet（ウォレットを作成）」を選択します。 ウォレットのパスワードを設定します。この後に設定画面が表示されるので、クリックして先に進みます。 完了すると、以下のような空のウォレットが新たに作成されます。 MetaMask画面の右上のネットワークドロップダウンを選択します。 ドロップダウンリストから「Add Network（ネットワークを追加）」を選択して、以下の内容を入力します。 Network Name: Milkomeda Cardano (C1) New RPC URL: https://rpc-mainnet-cardano-evm.c1.milkomeda.com Chain ID: 2001 Currency Symbol (Optional): MilkADA Block Explorer URL (Optional): https://explorer-mainnet-cardano-evm.c1.milkomeda.com 「**Save**（保存）」をクリックすると、ネットワークドロップダウンに「**Milkomeda Cardano (C1)**」が表示されます。 以下のとおり、アカウント名をクリックして、C1ウォレットアドレスをクリップボードにコピーします。 これで、Flintウォレットに戻って、ADAを送信してMilkADAに変換できるようになります。","s":"MetaMaskの設定","u":"/milkomeda-documentation/ja/cardano/for-end-users/configuring-metamask","h":"","p":111},{"i":114,"t":"Flintウォレットのウィンドウを開き、「Send（送る）」をクリックします。 次の画面で「Milkomedaモード」のトグルを切り替えて有効にします。クリップボードにコピーしておいたMilkomeda C1ウォレットのアドレスを「Milkomeda Ethereum Address」欄に貼り付けて、送金する金額を入力します（例では1Test ADAを送金しています）。 「Continue（続行）」をクリックします。 確認画面でウォレットのパスワードを入力し、「Send（送る）」をクリックします。 送金には確認を10回行う必要があり、約5分かかります。 トランザクションを確認すると、送信したMilkADAがMetaMaskのC1ウォレットに表示されます。 トランザクションの手数料について Milkomeda C1サイドチェーンのみで行われるトランザクションの場合、ブロックプロデューサーが設定した、標準のMilkomedaネットワークトランザクション手数料のみを支払います。 ただし、ラッピングを含むトランザクション（CardanoとMilkomeda C1サイドチェーン間で資産が移動するトランザクション）の場合、1つのトランザクションがそれぞれのチェーンで行われるため、CardanoとMilkomeda両方のトランザクション手数料を支払う必要があります。 たとえば、CardanoからMilkomeda C1に資産を送信する場合、Cardano上で資産をロックするためのトランザクションが1つ、Milkomeda C1上でラッピングされた資産を発行するためのトランザクションが1つ必要です。 Flintウォレットでこのようなトランザクションを送信する場合、「Network Fee（ネットワーク手数料）」の項目を展開することで、「Base Fee（基本手数料）」（Cardanoトランザクション手数料）と「Milkomeda Fee（Milkomeda手数料）」を確認できます。 このようなトランザクションの「Milkomeda Fee（Milkomeda手数料）」は、資産をラッピングするという役割を担うブロックプロデューサーにも報酬を支払うことになるため、Milkomedaでの標準的なトランザクション手数料よりも若干高くなることに注意しましょう。 ::: 以上で、Milkomeda C1サイドチェーン上で使用するため、ADAをMilkADAにラッピングすることができました。 MilkADAとは別に、「Wrapped ADA」または「WADA」と呼ばれるトークンがあります。 Wrapped ADAは、Ethereum上のWETHと同様の機能を果たすERC20トークンです。 これらを混同しないようにご注意ください。 ::: :::info ラッピングできるトークンのリストは、「Cardano Bridgeがサポートするネイティブアセット」のセクションをご確認ください。 :::","s":"MilkADAの取得","u":"/milkomeda-documentation/ja/cardano/for-end-users/obtaining-milkada","h":"","p":113},{"i":116,"t":"資産をMilkomeda C1サイドチェーンからCardanoに戻すには、Milkomeda Cardano Unwrap Bridgeを使用します。 以下の手順に従ってmilkADAのラッピングを解除し、CardanoメインネットウォレットでADAを受け取りましょう。 はじめに、Milkomeda Cardano Unwrap BridgeにアクセスしてMetaMaskウォレットを接続します。 「Next（次へ）」をクリックします Milkomeda C1サイドチェーンに接続します ウォレットの適切なネットワークを選択してください。 信頼できないサイトに接続してはいけません。 ウェブサイトのURLが次のとおりであることを確認してください: https://cardano-bridge.milkomeda.com ::: 次に、ラッピングを解除するmilkADAの金額を入力するか、矢印をクリックしてラッピングを解除する別の資産を選択し、「To」欄に自分のCardanoウォレットのアドレスを貼り付けます。 「Next Step（次へ）」ボタンをクリックします。 「Confirm（確認）」をクリックして、MetaMaskで資産のラッピングを解除するトランザクションに署名します。 ブロックチェーンの確認を待ちます。 トランザクションの詳細はCardanoscanエクスプローラーで確認できます。 ::: この時点では、ブラウザーのアドレスバーには、ラッピング解除のトランザクションについての情報が記載されています。 以下の図に例を示します。 アドレスバーの要素の意味は、それぞれ以下のとおりです。 EVMのラッピング解除トランザクションID ラッピング解除されたトークンの金額 ラッピングを解除されたトークンの名前 ラッピング解除のトランザクションの詳細については、Milkomeda Blockscoutエクスプローラーにアクセスして、以下のとおり検索ボックスにEVMラッピング解除トランザクションIDを貼り付けます。 トランザクションのサンプルを見る ラッピング解除のプロセスが完了しました。 トランザクションの確認が終わると、Cardano Mainnetウォレットにラッピングを解除された資産が表示されます。 :::info ラッピングを解除できるトークンのリストは、「Cardano Bridgeがサポートするネイティブアセット」のセクションをご確認ください。 :::","s":"資産のラッピング解除","u":"/milkomeda-documentation/ja/cardano/for-end-users/unwrapping-assets","h":"","p":115},{"i":118,"t":"Discordでは開発者やコミュニティメンバーが活発にガイダンスやサポートを提供しています。ぜひご参加ください。 また、 Milkomeda の FAQ や お問い合わせページ もご活用いただけます。","s":"サポート","u":"/milkomeda-documentation/ja/get-help","h":"","p":117},{"i":120,"t":"​Twitter​ 公式サイト","s":"Milkomedaのプロジェクト開発状況をフォローする","u":"/milkomeda-documentation/ja/get-help","h":"","p":117}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/62",[0,0.605,1,4.449,2,4.449,3,4.449,4,1.737]],["t/64",[5,4.449,6,3.204,7,2.835,8,4.449,9,0.407,10,4.449,11,4.449]],["t/66",[0,0.43,7,2.591,9,0.564,12,4.065,13,4.065]],["t/68",[14,4.812,15,4.812,16,4.812]],["t/70",[4,1.705,17,4.366,18,4.366,19,4.366,20,4.366,21,2.252,22,4.366,23,3.63]],["t/72",[0,0.409,9,0.354,21,2.769,24,2.463,25,3.065,26,3.866,27,2.207,28,2.463,29,3.866,30,3.866,31,1.382]],["t/74",[0,0.449,9,0.328,21,1.267,24,3.303,25,1.403,31,1.668,32,2.457,33,2.457,34,1.852,35,1.769,36,1.769,37,1.769,38,1.769,39,1.403,40,1.403,41,2.288,42,1.565,43,1.403,44,1.769,45,1.852,46,1.769,47,3.59,48,1.769,49,1.267,50,2.457,51,1.769,52,1.769,53,2.585,54,2.457,55,1.769,56,1.769,57,2.457,58,2.042,59,2.457]],["t/76",[9,0.496,25,1.247,28,2.096,34,1.126,40,1.247,49,1.126,60,1.815,61,3.661,62,3.928,63,1.815,64,1.815,65,1.573,66,1.815,67,1.815,68,1.815,69,1.815,70,2.369,71,1.815,72,1.815,73,1.815,74,1.815,75,2.369,76,2.85,77,1.815,78,1.815,79,1.815,80,1.815,81,1.815,82,1.815,83,1.815,84,1.815,85,2.184,86,1.815,87,1.815,88,1.815,89,1.815,90,1.815,91,1.815,92,1.815,93,1.815,94,2.184,95,2.184]],["t/78",[0,0.416,24,2.504,25,2.244,28,2.504,31,1.767,96,3.93,97,3.93,98,3.93,99,3.93,100,3.93,101,3.93,102,3.93,103,3.267]],["t/80",[0,0.469,9,0.304,24,2.825,25,2.531,28,2.825,31,1.585,104,3.321,105,1.896,106,3.321,107,3.321,108,3.321,109,2.392,110,3.321,111,2.392,112,2.761,113,3.321,114,3.321,115,3.321,116,3.321,117,3.321]],["t/82",[0,0.446,9,0.385,21,2.878,31,1.505,118,4.21,119,4.21,120,4.21,121,2.683]],["t/84",[0,0.362,4,1.335,9,0.413,31,1.222,39,2.58,43,1.951,122,2.841,123,3.418,124,3.418,125,2.841,126,3.418,127,3.418,128,2.841,129,3.418,130,3.418,131,2.841,132,2.841,133,2.841,134,1.355,135,3.418]],["t/86",[0,0.419,4,1.1,9,0.362,21,1.8,27,1.992,31,1.247,34,1.454,35,1.287,36,1.287,37,1.287,38,1.287,39,1.02,40,1.02,41,2.223,42,1.796,43,1.609,44,2.03,45,2.043,46,2.03,48,2.03,49,1.454,51,2.03,52,2.03,53,2.03,55,2.03,56,2.03,134,1.628,136,1.787,137,1.787,138,3.807,139,1.485,140,1.787,141,2.343,142,2.818,143,1.485,144,1.287,145,1.787,146,1.787]],["t/88",[4,1.341,9,0.493,34,1.193,49,1.193,60,1.922,61,3.767,62,4.024,63,1.922,64,1.922,65,1.665,66,1.922,67,1.922,68,1.922,69,1.922,70,1.665,71,1.922,72,1.922,73,1.922,74,1.922,75,2.473,76,1.665,77,1.922,78,1.922,79,1.922,80,1.922,81,1.922,82,1.922,83,1.922,84,1.922,86,1.922,87,1.922,88,1.922,89,1.922,90,1.922,91,1.922,92,1.922,93,1.922,134,0.693,147,2.312,148,2.312]],["t/90",[0,0.356,4,1.316,9,0.409,23,2.801,31,1.6,103,2.801,134,1.342,149,3.369,150,3.369,151,3.369,152,3.369,153,3.369,154,3.369,155,3.369,156,3.369,157,3.369,158,3.369,159,3.369,160,3.369,161,3.369,162,3.369]],["t/92",[0,0.492,31,1.277,34,1.843,105,2.04,134,1.551,163,3.35,164,3.573,165,3.573,166,3.573,167,4.651,168,3.573,169,3.573,170,2.97,171,2.97,172,3.573]],["t/94",[173,5.016]],["t/96",[0,0.509,174,3.066,175,4.812]],["t/98",[0,0.541,9,0.468,40,1.513,70,2.731,174,3.491,176,2.203,177,4.554,178,2.65,179,3.792,180,4.428,181,3.792,182,2.65,183,2.203,184,2.65,185,2.65,186,2.65,187,2.65,188,2.65]],["t/100",[0,0.475,6,1.231,9,0.541,41,1.089,42,1.089,45,0.882,49,1.748,134,0.513,139,1.421,174,1.089,183,1.421,189,1.709,190,2.72,191,2.72,192,2.72,193,1.709,194,2.72,195,3.389,196,2.72,197,2.72,198,1.709,199,2.72,200,1.709,201,3.389,202,1.709,203,1.709,204,1.709,205,1.709,206,1.709,207,1.709,208,1.709,209,1.709,210,1.709,211,1.709,212,1.709,213,1.709,214,1.709,215,2.441,216,1.709,217,1.709,218,1.709,219,1.709,220,1.709,221,1.709,222,1.709,223,1.709,224,1.709,225,1.421,226,1.709,227,1.709]],["t/102",[0,0.195,6,1.327,9,0.532,21,1.489,27,1.052,45,1.489,121,1.174,174,1.84,176,1.532,177,1.532,215,2.079,225,2.4,228,1.843,229,1.843,230,2.887,231,1.843,232,1.843,233,1.843,234,1.843,235,2.887,236,2.887,237,2.887,238,1.843,239,1.843,240,1.843,241,1.843,242,1.843,243,1.843,244,1.843,245,1.843,246,1.843,247,2.887,248,1.843,249,1.843,250,1.843,251,1.843,252,1.843,253,1.843,254,1.843,255,1.174,256,1.843,257,1.843,258,1.843,259,2.887,260,1.843,261,1.843,262,1.843,263,1.843,264,1.843,265,1.843,266,1.843,267,1.843,268,1.843,269,1.843]],["t/104",[0,0.457,7,1.616,9,0.336,31,1.313,75,1.826,109,1.826,111,1.826,134,1.295,215,1.826,255,1.616,270,2.108,271,2.536,272,2.108,273,2.536,274,2.108,275,2.536,276,2.108,277,2.108,278,2.108,279,2.108,280,2.108,281,2.108,282,2.108,283,2.108,284,2.108,285,2.108,286,2.108,287,2.536,288,2.536,289,2.536,290,2.536,291,2.536,292,3.674,293,2.536,294,2.536,295,2.536,296,3.674,297,2.536,298,2.536]],["t/106",[0,0.462,9,0.399,121,2.782,299,4.366,300,4.366,301,4.366,302,4.366,303,4.366]],["t/108",[0,0.341,9,0.435,65,3.953,76,2.319,105,1.461,112,4.563,134,0.475,144,1.14,163,1.14,304,1.583,305,1.583,306,1.583,307,1.583,308,1.583,309,1.583,310,1.583,311,1.583,312,1.583,313,1.583,314,1.583,315,1.583,316,1.583,317,1.583,318,1.583,319,1.583,320,1.583,321,2.558,322,1.583,323,1.583,324,2.558,325,1.583,326,1.583,327,1.583,328,1.583,329,1.583,330,1.583,331,1.583,332,1.583,333,1.583,334,1.583,335,1.583,336,1.583,337,1.583,338,1.583,339,1.583,340,1.583,341,1.583,342,1.583,343,1.583,344,1.583,345,1.583,346,1.583,347,1.583,348,1.583,349,1.583,350,1.583,351,1.583,352,1.583,353,1.583,354,1.14,355,1.583]],["t/110",[4,1.799,9,0.421,39,2.63,43,2.01,121,2.243,122,2.926,125,2.926,128,2.926,131,2.926,132,2.926,133,2.926,134,1.056,255,2.243,356,3.519,357,3.519,358,3.519,359,3.519,360,3.519]],["t/112",[0,0.274,4,1.868,9,0.341,27,2.131,34,1.925,35,1.867,36,1.867,37,1.867,38,1.867,39,1.48,40,1.48,41,2.378,42,1.651,43,1.48,44,1.867,45,1.925,46,1.867,48,1.867,49,1.337,51,1.867,52,1.867,53,2.688,55,1.867,56,1.867,58,2.154,134,1.435,138,3.102,141,2.154,143,2.154,144,1.867,361,2.592,362,2.592]],["t/114",[0,0.487,7,1.811,9,0.48,105,1.622,109,2.046,111,2.046,134,0.852,255,1.811,270,2.362,272,2.362,274,2.362,276,2.362,277,2.362,278,2.362,279,2.362,280,2.362,281,2.362,282,2.362,283,2.362,284,2.362,285,2.362,286,2.362,354,2.046,363,2.841,364,2.841,365,2.841,366,2.841,367,2.841,368,2.841,369,2.841,370,2.841]],["t/116",[0,0.514,4,1.047,9,0.547,27,1.53,45,1.382,105,2.183,134,1.457,163,2.753,170,3.178,171,2.228,354,1.93,371,2.68,372,2.68,373,2.68,374,2.68,375,2.68,376,2.68,377,2.68,378,2.68,379,2.68,380,2.68]],["t/118",[0,0.462,9,0.551,381,4.366,382,4.366]],["t/120",[9,0.449,383,4.912]]],"invertedIndex":[["",{"_index":9,"t":{"64":{"position":[[220,86]]},"66":{"position":[[0,4],[63,7],[71,75],[147,13],[204,6],[255,8],[264,40],[305,12]]},"72":{"position":[[332,52]]},"74":{"position":[[295,48],[344,30]]},"76":{"position":[[449,13],[629,1],[643,2],[668,1],[696,1],[702,2],[728,1],[730,1],[1403,40]]},"80":{"position":[[318,8]]},"82":{"position":[[335,22]]},"84":{"position":[[235,12],[444,2]]},"86":{"position":[[293,48],[342,30],[780,2],[1126,3]]},"88":{"position":[[450,13],[630,1],[644,2],[669,1],[697,1],[703,2],[729,1],[731,1]]},"90":{"position":[[44,2],[304,1]]},"98":{"position":[[113,2],[332,20],[373,1],[420,1],[491,1]]},"100":{"position":[[115,6],[122,2],[418,33],[470,33],[504,13],[561,1],[579,1],[630,1],[772,2],[775,2],[789,1],[839,2],[1021,2],[1024,1],[1092,1],[1159,1],[1198,1],[1236,1],[1291,33],[1325,1],[1383,1],[1450,2],[1500,2]]},"102":{"position":[[76,2],[187,30],[280,2],[283,3],[443,2],[446,3],[822,1],[856,1],[905,47],[1047,1],[1171,1],[1256,2],[1269,1],[1271,1],[1455,1],[1457,1],[1459,1],[1461,1]]},"104":{"position":[[342,16],[1724,3]]},"106":{"position":[[258,22]]},"108":{"position":[[168,2],[255,45],[331,5],[337,9],[347,13],[361,7],[1478,42],[1582,3]]},"110":{"position":[[213,12],[719,64]]},"112":{"position":[[252,48],[301,30]]},"114":{"position":[[332,16],[985,3],[1150,20],[1171,3],[1249,3]]},"116":{"position":[[245,25],[271,21],[362,3],[546,17],[604,3],[608,55],[664,12],[677,27],[727,17],[745,18],[867,16],[884,20],[1042,3]]},"118":{"position":[[57,3],[71,1],[77,1],[79,9],[89,11]]},"120":{"position":[[10,5]]}}}],["0.7.0",{"_index":69,"t":{"76":{"position":[[479,7]]},"88":{"position":[[480,7]]}}}],["0.7/contracts/token/erc20/erc20.sol",{"_index":74,"t":{"76":{"position":[[567,37]]},"88":{"position":[[568,37]]}}}],["0x",{"_index":247,"t":{"102":{"position":[[837,9],[847,8]]}}}],["0x000...」をevm",{"_index":227,"t":{"100":{"position":[[1503,28]]}}}],["0x000000000000000000000000000000000000bbbb",{"_index":212,"t":{"100":{"position":[[976,44]]}}}],["0x13fe17701861b769d58f44c2cebd918886d3d205",{"_index":322,"t":{"108":{"position":[[699,42]]}}}],["0x386e685b5cbaa7bc06e3dd2eecdc56105076e4fa",{"_index":325,"t":{"108":{"position":[[770,42]]}}}],["0x48aeb7584ba26d3791f06fba360db435b3d7a174",{"_index":341,"t":{"108":{"position":[[1111,42]]}}}],["0x4d5c63c07463efa5bb26ee0a6d8c39dd0e3dabd9",{"_index":329,"t":{"108":{"position":[[843,42]]}}}],["0x5950f9b6ef36f3127ea66799e64d0ea1f5fdb9d1",{"_index":338,"t":{"108":{"position":[[1044,42]]}}}],["0x5a955fddf055f2de3281d99718f5f1531744b102",{"_index":349,"t":{"108":{"position":[[1255,42]]}}}],["0x658b95858457549cfc0af513b1b902ab0f6e6946",{"_index":320,"t":{"108":{"position":[[635,42]]}}}],["0x65a51e52ecd17b641f8f0d1d56a6c9738951fdc9",{"_index":294,"t":{"104":{"position":[[1470,42]]}}}],["0x771cc58a257a458b0a7c74382ea1c4ef856b80a8",{"_index":335,"t":{"108":{"position":[[977,42]]}}}],["0x8c008bba2dd56b99f4a6ab276be3a478cb075f0c",{"_index":332,"t":{"108":{"position":[[909,42]]}}}],["0xa350679eafdb5836da9a796ff721a1fd8415c75f",{"_index":314,"t":{"108":{"position":[[515,42]]}}}],["0xaa761861322ca1cb8c0aceb1471b3b5af81de5a6",{"_index":353,"t":{"108":{"position":[[1327,42]]}}}],["0xab58da63dfdd6b97eaab3c94165ef6f43d951fb2",{"_index":345,"t":{"108":{"position":[[1184,42]]}}}],["0xae83571000af4499798d1e3b0fa0070eb3a3e3f9",{"_index":298,"t":{"104":{"position":[[1681,42]]}}}],["0xde482b84360c248c0d7260826a8b06a5a837235d",{"_index":311,"t":{"108":{"position":[[446,42]]}}}],["0xea55e366eb0f4cfaaf8d83dc1fc7286f11b5b1cb",{"_index":308,"t":{"108":{"position":[[385,42]]}}}],["0xevm_testnet_address",{"_index":223,"t":{"100":{"position":[[1359,23]]}}}],["0xf0c73e6287867baa4f865a17ee711ec989c78ac0",{"_index":317,"t":{"108":{"position":[[575,42]]}}}],["1",{"_index":176,"t":{"98":{"position":[[0,2]]},"102":{"position":[[1426,4]]}}}],["10",{"_index":83,"t":{"76":{"position":[[698,3]]},"88":{"position":[[699,3]]}}}],["1000000",{"_index":82,"t":{"76":{"position":[[688,7]]},"88":{"position":[[689,7]]}}}],["1000000000",{"_index":268,"t":{"102":{"position":[[1442,12]]}}}],["10回行う必要があり、約5",{"_index":274,"t":{"104":{"position":[[238,27]]},"114":{"position":[[252,27]]}}}],["1646438400000",{"_index":254,"t":{"102":{"position":[[1149,14]]}}}],["1つはdevnetバージョンで、テストadaを使ってcardano",{"_index":119,"t":{"82":{"position":[[42,33]]}}}],["1つはメインネットバージョンで、リアルadaを使ってcardano",{"_index":120,"t":{"82":{"position":[[99,56]]}}}],["1回目の確認は資金をウォレットからブリッジのアドレスに送信するためのもので、2回目の確認はalgorand",{"_index":114,"t":{"80":{"position":[[327,79]]}}}],["2",{"_index":178,"t":{"98":{"position":[[177,2]]}}}],["20",{"_index":112,"t":{"80":{"position":[[237,24]]},"108":{"position":[[432,2],[493,2],[562,2],[622,2],[682,2],[746,2],[817,2],[890,2],[956,2],[1024,2],[1091,2],[1158,2],[1231,2],[1302,2],[1374,2]]}}}],["2001",{"_index":143,"t":{"86":{"position":[[943,4]]},"112":{"position":[[531,4]]}}}],["200101",{"_index":139,"t":{"86":{"position":[[574,6]]},"100":{"position":[[832,6]]}}}],["200202",{"_index":50,"t":{"74":{"position":[[581,6]]}}}],["20スマートコントラクトのデプロイを行うため、「test_erc20.sol",{"_index":66,"t":{"76":{"position":[[328,60]]},"88":{"position":[[329,60]]}}}],["2つのパラメーターで構成されます。プロトコルマジック&evm",{"_index":218,"t":{"100":{"position":[[1238,52]]}}}],["2分程度）、algorand",{"_index":101,"t":{"78":{"position":[[247,23]]}}}],["2回で、約20秒かかります（algorandでは4.5秒、rollupのバッチでは約14",{"_index":115,"t":{"80":{"position":[[407,64]]}}}],["3",{"_index":182,"t":{"98":{"position":[[329,2]]}}}],["3000000",{"_index":257,"t":{"102":{"position":[[1188,10]]}}}],["3～5分で必要なトランザクションが確認されると、cardano",{"_index":172,"t":{"92":{"position":[[344,32]]}}}],["500000",{"_index":259,"t":{"102":{"position":[[1221,9],[1247,8]]}}}],["5分程度）、cardano",{"_index":161,"t":{"90":{"position":[[502,22]]}}}],["86400000",{"_index":211,"t":{"100":{"position":[[947,9]]}}}],["87",{"_index":219,"t":{"100":{"position":[[1327,3]]}}}],["88",{"_index":222,"t":{"100":{"position":[[1355,3]]}}}],["9c223e1daf6184672e982d9aa560d9fd1d09a01b",{"_index":265,"t":{"102":{"position":[[1369,43]]}}}],["_mint(msg.send",{"_index":81,"t":{"76":{"position":[[670,17]]},"88":{"position":[[671,17]]}}}],["a1",{"_index":28,"t":{"72":{"position":[[122,2]]},"76":{"position":[[29,24],[1136,2]]},"78":{"position":[[324,2]]},"80":{"position":[[10,10],[564,2]]}}}],["a1ブリッジとの互換性を持つtestnetウォレットを設定する際には、myalgo",{"_index":98,"t":{"78":{"position":[[114,46]]}}}],["a1ブリッジに戻り、テストalgo",{"_index":59,"t":{"74":{"position":[[870,27]]}}}],["ada",{"_index":255,"t":{"102":{"position":[[1164,6]]},"104":{"position":[[159,13]]},"110":{"position":[[683,35]]},"114":{"position":[[173,13]]}}}],["ada」または「wada",{"_index":368,"t":{"114":{"position":[[1071,28]]}}}],["adaの入ったcardanoウォレットと、metamask",{"_index":300,"t":{"106":{"position":[[59,60]]}}}],["adaは、ethereum上のwethと同様の機能を果たすerc20",{"_index":370,"t":{"114":{"position":[[1108,41]]}}}],["adaをmilkomedaに移動させると、milktada",{"_index":290,"t":{"104":{"position":[[1207,45]]}}}],["adaをラッピングするmilkomeda",{"_index":17,"t":{"70":{"position":[[0,30]]}}}],["ada（wtada）」は、ethereum上のwethと同様の機能を果たすerc20",{"_index":291,"t":{"104":{"position":[[1253,61]]}}}],["add",{"_index":40,"t":{"74":{"position":[[410,16]]},"76":{"position":[[1365,3]]},"86":{"position":[[408,16]]},"98":{"position":[[299,3]]},"112":{"position":[[367,16]]}}}],["addr_test1wz6lvjg3anml96vl22mls5vae3x2cgaqwy2ewp5gj3fcxdcw652wz",{"_index":252,"t":{"102":{"position":[[1068,66]]}}}],["address",{"_index":215,"t":{"100":{"position":[[1150,8],[1161,7],[1176,7]]},"102":{"position":[[373,7],[732,7]]},"104":{"position":[[1672,8]]}}}],["address」欄に貼り付けて、送金する金額を入力します（例では1test",{"_index":364,"t":{"114":{"position":[[135,37]]}}}],["address」欄に貼り付けて、送金する金額を入力します（例では300test",{"_index":273,"t":{"104":{"position":[[119,39]]}}}],["address（アドレスをコピー）」をクリックしてcardano",{"_index":152,"t":{"90":{"position":[[176,32]]}}}],["agree（同意します）」をクリックしてください。以下の画面が表示されたら、「mainnet",{"_index":359,"t":{"110":{"position":[[376,65]]}}}],["agree（同意します）」をクリックしてください。以下の画面が表示されたら、「testnet",{"_index":129,"t":{"84":{"position":[[378,65]]}}}],["algo",{"_index":97,"t":{"78":{"position":[[75,20]]}}}],["algorand",{"_index":24,"t":{"72":{"position":[[0,22]]},"74":{"position":[[69,8],[489,8],[538,8],[673,8],[756,8],[815,8]]},"78":{"position":[[327,8]]},"80":{"position":[[520,8],[567,8]]}}}],["algorandテストネットとrollup",{"_index":100,"t":{"78":{"position":[[188,58]]}}}],["algorandテストネットウォレットとテストalgo",{"_index":32,"t":{"74":{"position":[[0,38]]}}}],["allowlist",{"_index":246,"t":{"102":{"position":[[824,12]]}}}],["api",{"_index":157,"t":{"90":{"position":[[427,4]]}}}],["apiについて、milkomeda",{"_index":229,"t":{"102":{"position":[[33,17]]}}}],["apiのベースurlはmilkomeda",{"_index":231,"t":{"102":{"position":[[124,20]]}}}],["apiスターゲートエンドポイントを使うと、devnet",{"_index":250,"t":{"102":{"position":[[968,56]]}}}],["asset",{"_index":261,"t":{"102":{"position":[[1259,9]]}}}],["b4004c2f3edfdd2016d0fead9b927064f345534b000000000000000000000000",{"_index":263,"t":{"102":{"position":[[1286,67]]}}}],["backendendpoint",{"_index":194,"t":{"100":{"position":[[279,15],[842,16]]}}}],["backendendpoints.devnet",{"_index":209,"t":{"100":{"position":[[859,24]]}}}],["begin（開始する）」をクリックします。言語を選択したら、「i",{"_index":128,"t":{"84":{"position":[[345,32]]},"110":{"position":[[343,32]]}}}],["block",{"_index":55,"t":{"74":{"position":[[626,5]]},"86":{"position":[[618,5],[973,5]]},"112":{"position":[[572,5]]}}}],["blockscoutエクスプローラーにアクセスして、以下のとおり検索ボックスにevmラッピング解除トランザクションid",{"_index":380,"t":{"116":{"position":[[799,67]]}}}],["blue",{"_index":331,"t":{"108":{"position":[[903,5]]}}}],["blueshift",{"_index":330,"t":{"108":{"position":[[893,9]]}}}],["bridg",{"_index":105,"t":{"80":{"position":[[38,6]]},"92":{"position":[[184,6]]},"108":{"position":[[29,33],[1402,67]]},"114":{"position":[[1210,38]]},"116":{"position":[[62,13],[1003,38]]}}}],["bridge.milkomeda.com",{"_index":375,"t":{"116":{"position":[[341,20]]}}}],["bridgeにアクセスしてmetamask",{"_index":373,"t":{"116":{"position":[[166,33]]}}}],["bridgeはmilkomeda",{"_index":164,"t":{"92":{"position":[[25,16]]}}}],["c1",{"_index":4,"t":{"62":{"position":[[187,17]]},"70":{"position":[[148,2]]},"84":{"position":[[126,31]]},"86":{"position":[[793,40],[866,4]]},"88":{"position":[[29,25],[1136,29]]},"90":{"position":[[577,21]]},"110":{"position":[[104,31],[810,16]]},"112":{"position":[[38,22],[454,4],[715,15],[731,48]]},"116":{"position":[[229,15]]}}}],["c1に資産を送信する場合、cardano上で資産をロックするためのトランザクションが1つ、milkomeda",{"_index":280,"t":{"104":{"position":[[620,54]]},"114":{"position":[[610,54]]}}}],["c1アドレスを取得し、milkomeda",{"_index":302,"t":{"106":{"position":[[176,20]]}}}],["c1ウォレットのアドレスを「milkomeda",{"_index":272,"t":{"104":{"position":[[86,23]]},"114":{"position":[[102,23]]}}}],["c1サイドチェーンからcardanoに戻すには、milkomeda",{"_index":371,"t":{"116":{"position":[[13,33]]}}}],["c1サイドチェーンでは、現在2",{"_index":118,"t":{"82":{"position":[[10,31]]}}}],["c1サイドチェーンでラッピングされたada",{"_index":15,"t":{"68":{"position":[[51,34]]}}}],["c1サイドチェーンのみで行われるトランザクションの場合、ブロックプロデューサーが設定した、標準のmilkomeda",{"_index":276,"t":{"104":{"position":[[369,83]]},"114":{"position":[[359,83]]}}}],["c1サイドチェーンのメインネットバージョンに加え、開発者はmilkomeda",{"_index":18,"t":{"70":{"position":[[31,38]]}}}],["c1サイドチェーンは、手数料やガスの支払いのベースとなる資産として、milkada",{"_index":299,"t":{"106":{"position":[[10,48]]}}}],["c1サイドチェーン上で使用するため、adaをmilkada",{"_index":366,"t":{"114":{"position":[[1003,46]]}}}],["c1サイドチェーン間で資産が移動するトランザクション）の場合、1つのトランザクションがそれぞれのチェーンで行われるため、cardanoとmilkomeda",{"_index":278,"t":{"104":{"position":[[492,103]]},"114":{"position":[[482,103]]}}}],["c1メインネットバージョンでリアルada",{"_index":149,"t":{"90":{"position":[[57,49]]}}}],["c1メインネットバージョンでリアルadaを使用するには、「mainnet（メインネット）」をクリックしてcardano",{"_index":130,"t":{"84":{"position":[[457,77]]}}}],["c1上でadaを送信してmilkada",{"_index":303,"t":{"106":{"position":[[197,33]]}}}],["c1上でラッピングされた資産を発行するためのトランザクションが1",{"_index":281,"t":{"104":{"position":[[675,38]]},"114":{"position":[[665,38]]}}}],["c3",{"_index":310,"t":{"108":{"position":[[443,2]]}}}],["captchaを完了したら、「request",{"_index":159,"t":{"90":{"position":[[451,22]]}}}],["card",{"_index":313,"t":{"108":{"position":[[509,5]]}}}],["card.start",{"_index":312,"t":{"108":{"position":[[496,12]]}}}],["cardano",{"_index":134,"t":{"84":{"position":[[748,14],[784,9]]},"86":{"position":[[0,7],[48,7],[487,7],[535,7],[673,7],[751,7],[858,7],[904,7],[1018,7],[1097,7],[1174,7],[1230,7]]},"88":{"position":[[1259,11]]},"90":{"position":[[0,7],[306,26]]},"92":{"position":[[10,7],[42,7],[169,7]]},"100":{"position":[[135,42]]},"104":{"position":[[313,7],[1005,7],[1159,7]]},"108":{"position":[[1387,7]]},"110":{"position":[[655,27]]},"112":{"position":[[446,7],[492,7],[628,7],[707,7]]},"114":{"position":[[1183,26]]},"116":{"position":[[47,7],[151,7],[905,24],[973,29]]}}}],["cardanoscan",{"_index":378,"t":{"116":{"position":[[564,39]]}}}],["cardanoからmilkomeda",{"_index":279,"t":{"104":{"position":[[596,23]]},"114":{"position":[[586,23]]}}}],["cardanoとmilkomeda",{"_index":277,"t":{"104":{"position":[[453,38]]},"114":{"position":[[443,38]]}}}],["cardanoに接続されたevm",{"_index":3,"t":{"62":{"position":[[131,42]]}}}],["cardanoへのmilkomeda",{"_index":304,"t":{"108":{"position":[[0,28]]}}}],["cardanoメインネットからブリッジアドレスにadaを送信して、milkomeda",{"_index":14,"t":{"68":{"position":[[0,50]]}}}],["cardanoメインネットを使用する場合、wada",{"_index":295,"t":{"104":{"position":[[1513,45]]}}}],["chain",{"_index":48,"t":{"74":{"position":[[571,5]]},"86":{"position":[[564,5],[933,5]]},"112":{"position":[[521,5]]}}}],["charli3",{"_index":309,"t":{"108":{"position":[[435,7]]}}}],["chrome",{"_index":357,"t":{"110":{"position":[[226,62]]}}}],["chromeウィンドウ右上の拡張機能アイコンをクリックして、flint",{"_index":126,"t":{"84":{"position":[[248,60]]}}}],["chrome拡張機能アイコンをクリックして、metamask",{"_index":36,"t":{"74":{"position":[[175,39]]},"86":{"position":[[173,39]]},"112":{"position":[[132,39]]}}}],["chrome用metamask",{"_index":35,"t":{"74":{"position":[[145,29]]},"86":{"position":[[143,29]]},"112":{"position":[[102,29]]}}}],["coin(nomad",{"_index":347,"t":{"108":{"position":[[1238,11]]}}}],["compiler（solidityコンパイラー）」アイコンをクリックして、コンパイラーのバージョンを選択します（この例では0.7.6+commit.7338295fを使用しています）。次に、以下のとおり「compil",{"_index":85,"t":{"76":{"position":[[755,109]]}}}],["compiler（solidityコンパイラー）」アイコンをクリックして、コンパイラーのバージョンを選択します（この例では0.7.6+commit.7338295fを使用しています）。次に、以下の通り「compil",{"_index":147,"t":{"88":{"position":[[756,108]]}}}],["confirm（決定）」、「cr",{"_index":131,"t":{"84":{"position":[[535,23]]},"110":{"position":[[442,23]]}}}],["confirm（確認）」をクリックして、metamask",{"_index":377,"t":{"116":{"position":[[487,58]]}}}],["const",{"_index":186,"t":{"98":{"position":[[470,5]]}}}],["constructor",{"_index":78,"t":{"76":{"position":[[631,11]]},"88":{"position":[[632,11]]}}}],["continu",{"_index":109,"t":{"80":{"position":[[164,23]]},"104":{"position":[[173,23]]},"114":{"position":[[187,23]]}}}],["contract",{"_index":75,"t":{"76":{"position":[[605,8],[1218,40]]},"88":{"position":[[606,8],[1218,40]]},"104":{"position":[[1663,8]]}}}],["contracts/blob/v3.4.0",{"_index":72,"t":{"76":{"position":[[540,21]]},"88":{"position":[[541,21]]}}}],["creat",{"_index":132,"t":{"84":{"position":[[611,40]]},"110":{"position":[[518,40]]}}}],["currenc",{"_index":51,"t":{"74":{"position":[[588,8]]},"86":{"position":[[581,8],[948,8]]},"112":{"position":[[536,8]]}}}],["current_address",{"_index":251,"t":{"102":{"position":[[1049,18]]}}}],["custom",{"_index":95,"t":{"76":{"position":[[1369,6]]}}}],["dcspark/milkomeda",{"_index":180,"t":{"98":{"position":[[242,18],[303,18],[427,19]]}}}],["deploy",{"_index":87,"t":{"76":{"position":[[890,10]]},"88":{"position":[[890,10]]}}}],["dev.milkomeda.com",{"_index":106,"t":{"80":{"position":[[45,18]]}}}],["devnet",{"_index":21,"t":{"70":{"position":[[151,40]]},"72":{"position":[[210,36],[247,44],[292,39]]},"74":{"position":[[531,6]]},"82":{"position":[[156,36],[193,37],[231,76]]},"86":{"position":[[528,6],[666,6],[744,6]]},"102":{"position":[[218,6],[1025,21]]}}}],["devnet\"].backendendpoint",{"_index":233,"t":{"102":{"position":[[255,24]]}}}],["devnet\"].protocolmag",{"_index":226,"t":{"100":{"position":[[1475,24]]}}}],["devnet.cardano",{"_index":220,"t":{"100":{"position":[[1331,15]]}}}],["devnetにアクセスしてmetamask",{"_index":168,"t":{"92":{"position":[[195,33]]}}}],["devnetにアクセスして、cardano",{"_index":19,"t":{"70":{"position":[[70,21]]}}}],["devnet（milkomdeaのalgorand",{"_index":29,"t":{"72":{"position":[[125,25]]}}}],["discord",{"_index":381,"t":{"118":{"position":[[0,56]]}}}],["enter",{"_index":67,"t":{"76":{"position":[[389,22]]},"88":{"position":[[390,22]]}}}],["erc",{"_index":65,"t":{"76":{"position":[[300,27]]},"88":{"position":[[301,27]]},"108":{"position":[[428,3],[489,3],[558,3],[618,3],[678,3],[742,3],[813,3],[886,3],[952,3],[1020,3],[1087,3],[1154,3],[1227,3],[1298,3],[1370,3]]}}}],["erc20",{"_index":77,"t":{"76":{"position":[[623,5]]},"88":{"position":[[624,5]]}}}],["erc20(\"token",{"_index":79,"t":{"76":{"position":[[646,14]]},"88":{"position":[[647,14]]}}}],["erc20スマートコントラクトのアドレスをコピーしたら、metamask",{"_index":94,"t":{"76":{"position":[[1259,64]]}}}],["ethereum",{"_index":7,"t":{"64":{"position":[[112,36]]},"66":{"position":[[318,35]]},"104":{"position":[[110,8]]},"114":{"position":[[126,8]]}}}],["ethereumからプロジェクトを移植できるので、サポートされるl1ブロックチェーンで利用できるdapp",{"_index":8,"t":{"64":{"position":[[149,70]]}}}],["evm",{"_index":6,"t":{"64":{"position":[[79,32]]},"100":{"position":[[1172,3]]},"102":{"position":[[793,28]]}}}],["evm.c1",{"_index":221,"t":{"100":{"position":[[1347,7]]}}}],["evm.c1.milkomeda.com",{"_index":138,"t":{"86":{"position":[[543,20],[681,20],[759,20],[912,20],[1026,20],[1105,20]]},"112":{"position":[[500,20],[636,20]]}}}],["evmのラッピング解除トランザクションid",{"_index":379,"t":{"116":{"position":[[705,21]]}}}],["evmブロックチェーンにevm",{"_index":1,"t":{"62":{"position":[[10,37]]}}}],["explor",{"_index":56,"t":{"74":{"position":[[632,8]]},"86":{"position":[[624,8],[979,8]]},"112":{"position":[[578,8]]}}}],["fals",{"_index":200,"t":{"100":{"position":[[592,6]]}}}],["faq",{"_index":382,"t":{"118":{"position":[[73,3]]}}}],["faucet",{"_index":154,"t":{"90":{"position":[[260,6]]}}}],["fee（milkomeda",{"_index":285,"t":{"104":{"position":[[831,26]]},"114":{"position":[[821,26]]}}}],["fee（milkomeda手数料）」は、資産をラッピングするという役割を担うブロックプロデューサーにも報酬を支払うことになるため、milkomeda",{"_index":286,"t":{"104":{"position":[[883,111]]},"114":{"position":[[873,111]]}}}],["fee（ネットワーク手数料）」の項目を展開することで、「bas",{"_index":283,"t":{"104":{"position":[[755,32]]},"114":{"position":[[745,32]]}}}],["fee（基本手数料）」（cardanoトランザクション手数料）と「milkomeda",{"_index":284,"t":{"104":{"position":[[788,42]]},"114":{"position":[[778,42]]}}}],["file",{"_index":64,"t":{"76":{"position":[[227,25]]},"88":{"position":[[228,25]]}}}],["flint",{"_index":121,"t":{"82":{"position":[[308,26]]},"102":{"position":[[79,39]]},"106":{"position":[[231,26]]},"110":{"position":[[289,12]]}}}],["flintでcardanoウォレットを作成し、metamaskの設定によりmilkomeda",{"_index":301,"t":{"106":{"position":[[120,55]]}}}],["flintとmetamask",{"_index":16,"t":{"68":{"position":[[86,46]]}}}],["flintのウィンドウで、最初の警告画面に続いて表示される「let’",{"_index":127,"t":{"84":{"position":[[309,35]]}}}],["flintの現在のバージョンでは、cardano",{"_index":123,"t":{"84":{"position":[[53,24]]}}}],["flintの現在のバージョンでは、「milkomedaモード」を有効にして、milkomeda",{"_index":356,"t":{"110":{"position":[[56,47]]}}}],["flintウォレットでこのようなトランザクションを送信する場合、「network",{"_index":282,"t":{"104":{"position":[[714,40]]},"114":{"position":[[704,40]]}}}],["flintウォレットに戻って、adaを送信してmilkada",{"_index":362,"t":{"112":{"position":[[780,48]]}}}],["flintウォレットに戻り、テストada",{"_index":146,"t":{"86":{"position":[[1271,33]]}}}],["flintウォレットのウィンドウで、最初の警告画面に続いて表示される「let’",{"_index":358,"t":{"110":{"position":[[302,40]]}}}],["flintウォレットのウィンドウで「rec",{"_index":150,"t":{"90":{"position":[[107,41]]}}}],["flintウォレットのウィンドウを開き、「send",{"_index":270,"t":{"104":{"position":[[0,39]]},"114":{"position":[[0,39]]}}}],["flintウォレットはchrome拡張機能で、defiとnft",{"_index":122,"t":{"84":{"position":[[0,52]]},"110":{"position":[[0,55]]}}}],["flintウォレットをインストールするには、chromeブラウザーで以下のリンクにアクセスして、「chromeに追加」ボタンをクリックします。flint",{"_index":125,"t":{"84":{"position":[[158,76]]},"110":{"position":[[136,76]]}}}],["flintウォレットを設定し、cardano",{"_index":22,"t":{"70":{"position":[[192,28]]}}}],["fromadafeelovelac",{"_index":258,"t":{"102":{"position":[[1199,21]]}}}],["fullallowedlist",{"_index":244,"t":{"102":{"position":[[755,15]]}}}],["fund",{"_index":160,"t":{"90":{"position":[[474,27]]}}}],["gener",{"_index":214,"t":{"100":{"position":[[1113,9]]}}}],["generatemilkomedametadata",{"_index":183,"t":{"98":{"position":[[375,26]]},"100":{"position":[[1123,26]]}}}],["generatemilkomedametadata(\"0x000",{"_index":224,"t":{"100":{"position":[[1416,33]]}}}],["gero",{"_index":307,"t":{"108":{"position":[[380,4]]}}}],["gerowallet",{"_index":306,"t":{"108":{"position":[[369,10]]}}}],["hooski",{"_index":321,"t":{"108":{"position":[[685,6],[692,6]]}}}],["https://algorand",{"_index":104,"t":{"80":{"position":[[21,16]]}}}],["https://allowlist",{"_index":239,"t":{"102":{"position":[[450,17]]}}}],["https://allowlist.flint",{"_index":234,"t":{"102":{"position":[[287,23]]}}}],["https://cardano",{"_index":374,"t":{"116":{"position":[[325,15]]}}}],["https://explor",{"_index":141,"t":{"86":{"position":[[649,16],[993,16]]},"112":{"position":[[603,16]]}}}],["https://github.com/openzeppelin/openzeppelin",{"_index":71,"t":{"76":{"position":[[494,45]]},"88":{"position":[[495,45]]}}}],["https://rpc",{"_index":46,"t":{"74":{"position":[[519,11]]},"86":{"position":[[516,11],[884,11]]},"112":{"position":[[472,11]]}}}],["https://testnet",{"_index":57,"t":{"74":{"position":[[657,15]]}}}],["https://testnet.algoexplorer.io/dispens",{"_index":96,"t":{"78":{"position":[[23,41]]}}}],["https://wallet.myalgo.com",{"_index":99,"t":{"78":{"position":[[161,26]]}}}],["iag",{"_index":319,"t":{"108":{"position":[[631,3]]}}}],["iagon",{"_index":318,"t":{"108":{"position":[[625,5]]}}}],["id",{"_index":49,"t":{"74":{"position":[[577,3]]},"76":{"position":[[128,3]]},"86":{"position":[[570,3],[939,3]]},"88":{"position":[[129,3]]},"100":{"position":[[188,28],[673,3],[828,3]]},"112":{"position":[[527,3]]}}}],["idcardano",{"_index":262,"t":{"102":{"position":[[1273,12]]}}}],["ide画面の左側にある「deploy",{"_index":93,"t":{"76":{"position":[[1197,20]]},"88":{"position":[[1197,20]]}}}],["idmilkomeda",{"_index":264,"t":{"102":{"position":[[1354,14]]}}}],["import",{"_index":70,"t":{"76":{"position":[[487,6],[1324,6]]},"88":{"position":[[488,6]]},"98":{"position":[[353,12],[366,6]]}}}],["info",{"_index":354,"t":{"108":{"position":[[1470,7]]},"114":{"position":[[1175,7]]},"116":{"position":[[965,7]]}}}],["isaddress=0x",{"_index":248,"t":{"102":{"position":[[858,12]]}}}],["ismainnet",{"_index":190,"t":{"100":{"position":[[125,9],[581,10]]}}}],["js",{"_index":174,"t":{"96":{"position":[[15,2]]},"98":{"position":[[13,2],[44,2],[190,2],[261,2],[322,2],[447,2],[521,2]]},"100":{"position":[[10,2]]},"102":{"position":[[51,2],[145,2]]}}}],["key",{"_index":158,"t":{"90":{"position":[[432,18]]}}}],["magic",{"_index":216,"t":{"100":{"position":[[1209,5]]}}}],["mainchain",{"_index":191,"t":{"100":{"position":[[178,9],[619,10]]}}}],["mainnet",{"_index":27,"t":{"72":{"position":[[90,21]]},"86":{"position":[[896,7],[1010,7],[1089,7]]},"102":{"position":[[225,7]]},"112":{"position":[[484,7],[620,7]]},"116":{"position":[[930,34]]}}}],["mainnet\"].backendendpoint",{"_index":238,"t":{"102":{"position":[[417,25]]}}}],["mainnet.flint",{"_index":240,"t":{"102":{"position":[[468,13]]}}}],["metadata",{"_index":213,"t":{"100":{"position":[[1104,8]]}}}],["metamask",{"_index":34,"t":{"74":{"position":[[104,40],[375,34]]},"76":{"position":[[1166,24]]},"86":{"position":[[102,40],[373,34]]},"88":{"position":[[1166,24]]},"92":{"position":[[325,18]]},"112":{"position":[[61,40],[332,34]]}}}],["metamaskのウィンドウ内の「get",{"_index":37,"t":{"74":{"position":[[215,20]]},"86":{"position":[[213,20]]},"112":{"position":[[172,20]]}}}],["metamaskの画面が表示されるので、「next（次へ）」をクリックして「connect（接続）」を選択し、c1ウォレットをremix",{"_index":91,"t":{"76":{"position":[[1005,75]]},"88":{"position":[[1005,75]]}}}],["metamaskを設定してmilkomeda",{"_index":360,"t":{"110":{"position":[[784,25]]}}}],["metamaskを設定して、milkomeda",{"_index":103,"t":{"78":{"position":[[298,25]]},"90":{"position":[[551,25]]}}}],["metamaskウォレットが接続されたら「deploy（デプロイ）」ボタンをクリックして、milkomeda",{"_index":92,"t":{"76":{"position":[[1081,54]]},"88":{"position":[[1081,54]]}}}],["microservice]（https://github.com/dcspark/allowedlist",{"_index":242,"t":{"102":{"position":[[572,55]]}}}],["milk",{"_index":324,"t":{"108":{"position":[[760,4],[765,4]]}}}],["milkada",{"_index":144,"t":{"86":{"position":[[965,7]]},"108":{"position":[[63,104]]},"112":{"position":[[564,7]]}}}],["milkadaがmetamaskのc1",{"_index":365,"t":{"114":{"position":[[280,51]]}}}],["milkadaとは別に、「wrap",{"_index":367,"t":{"114":{"position":[[1050,20]]}}}],["milkadaのラッピングを解除し、cardanoメインネットウォレットでada",{"_index":372,"t":{"116":{"position":[[76,59]]}}}],["milkadaの金額を入力し、「to」欄に自分のcardano",{"_index":169,"t":{"92":{"position":[[229,41]]}}}],["milkadaの金額を入力するか、矢印をクリックしてラッピングを解除する別の資産を選択し、「to」欄に自分のcardano",{"_index":376,"t":{"116":{"position":[[366,92]]}}}],["milkadaを受け取ることのできる、milkomeda",{"_index":361,"t":{"112":{"position":[[0,37]]}}}],["milkomeda",{"_index":0,"t":{"62":{"position":[[0,9],[174,12],[205,41]]},"66":{"position":[[161,42]]},"72":{"position":[[112,9]]},"74":{"position":[[479,9],[784,30],[857,12]]},"78":{"position":[[96,17]]},"80":{"position":[[0,9],[550,13]]},"82":{"position":[[0,9]]},"84":{"position":[[447,9]]},"86":{"position":[[477,9],[783,9],[848,9],[1199,30]]},"90":{"position":[[47,9]]},"92":{"position":[[0,9],[154,14]]},"96":{"position":[[0,14]]},"98":{"position":[[3,9],[34,9],[72,40],[116,60],[180,9]]},"100":{"position":[[0,9],[54,60],[353,39],[1026,65],[1094,9],[1385,30]]},"102":{"position":[[953,9]]},"104":{"position":[[359,9],[858,24],[995,9]]},"106":{"position":[[0,9]]},"108":{"position":[[171,23],[301,29],[1377,9]]},"112":{"position":[[436,9]]},"114":{"position":[[349,9],[848,24],[989,13]]},"116":{"position":[[0,12],[136,14],[219,9],[764,34]]},"118":{"position":[[61,9]]}}}],["milkomedac1など）やサイドチェーンid",{"_index":193,"t":{"100":{"position":[[227,51]]}}}],["milkomedajssdk",{"_index":187,"t":{"98":{"position":[[476,14]]}}}],["milkomedanetwork",{"_index":184,"t":{"98":{"position":[[402,17]]}}}],["milkomedanetworks[\"c1",{"_index":225,"t":{"100":{"position":[[1453,21]]},"102":{"position":[[233,21],[395,21]]}}}],["milkomedaにより、スマートコントラクト（solidity）最大のコミュニティの人材やリソースを活用して、cardano、algorand、solana",{"_index":11,"t":{"64":{"position":[[373,107]]}}}],["milkomedaの連携についてご不明な点がありましたら、https://www.milkomeda.com/supportまたはdiscord",{"_index":269,"t":{"102":{"position":[[1463,99]]}}}],["milkomedaは、cardano、solana、algorandなど主要なブロックチェーン向けにl2",{"_index":2,"t":{"62":{"position":[[48,82]]}}}],["milkomedaは長期的な観点での分散化を実現しつつ、1",{"_index":12,"t":{"66":{"position":[[5,57]]}}}],["milkomedaは非evmのエコシステムに、evmベースのエコシステムのロールアップやsolid",{"_index":5,"t":{"64":{"position":[[0,78]]}}}],["milkomedaを基盤とするl3",{"_index":10,"t":{"64":{"position":[[307,65]]}}}],["milkomedaサイドチェーンに関するデータを取得するrest",{"_index":228,"t":{"102":{"position":[[0,32]]}}}],["milkomedaネットワーク（devnet",{"_index":198,"t":{"100":{"position":[[518,42]]}}}],["milkomedaメインネットに連携させる場合、別のエンドポイントを2つ使ってネットワーク上で許可されたevm",{"_index":241,"t":{"102":{"position":[[493,78]]}}}],["milkomedaモード」のトグルを切り替えて有効にします。milkomeda",{"_index":271,"t":{"104":{"position":[[40,45]]}}}],["milkomedaモード」のトグルを切り替えて有効にします。クリップボードにコピーしておいたmilkomeda",{"_index":363,"t":{"114":{"position":[[40,61]]}}}],["milktada",{"_index":140,"t":{"86":{"position":[[609,8]]}}}],["milktadaがmetamaskのmilkomeda",{"_index":275,"t":{"104":{"position":[[266,46]]}}}],["milktadaとラッピングされたテストada",{"_index":288,"t":{"104":{"position":[[1100,23]]}}}],["milktadaのラッピングを解除し、cardano",{"_index":166,"t":{"92":{"position":[[90,35]]}}}],["milktadaは、milkomeda",{"_index":289,"t":{"104":{"position":[[1124,34]]}}}],["milktadaを送信してラッピングすることは可能ですが、このアドレスにwtada",{"_index":293,"t":{"104":{"position":[[1342,110]]}}}],["milktalgo",{"_index":54,"t":{"74":{"position":[[616,9]]}}}],["milktalgoがmetamaskのmilkomeda",{"_index":116,"t":{"80":{"position":[[472,47]]}}}],["milktalgoを受け取ることのできるmilkomeda",{"_index":33,"t":{"74":{"position":[[39,29]]}}}],["milkトークンを選択すると「muesliswap",{"_index":355,"t":{"108":{"position":[[1521,60]]}}}],["mincntint",{"_index":266,"t":{"102":{"position":[[1413,12]]}}}],["mingwei",{"_index":267,"t":{"102":{"position":[[1431,10]]}}}],["minlovelac",{"_index":256,"t":{"102":{"position":[[1173,14]]}}}],["mobil",{"_index":327,"t":{"108":{"position":[[826,6]]}}}],["muesliswap",{"_index":323,"t":{"108":{"position":[[749,10]]}}}],["myalgoウォレットを、次にmetamask",{"_index":108,"t":{"80":{"position":[[101,32]]}}}],["name",{"_index":42,"t":{"74":{"position":[[473,5]]},"86":{"position":[[471,5],[842,5]]},"100":{"position":[[599,5]]},"112":{"position":[[430,5]]}}}],["network",{"_index":41,"t":{"74":{"position":[[427,37],[465,7]]},"86":{"position":[[425,37],[463,7],[834,7]]},"100":{"position":[[1228,7]]},"112":{"position":[[384,37],[422,7]]}}}],["network_nam",{"_index":199,"t":{"100":{"position":[[563,15],[605,13]]}}}],["networkid",{"_index":204,"t":{"100":{"position":[[689,10]]}}}],["networkmag",{"_index":206,"t":{"100":{"position":[[728,13]]}}}],["new",{"_index":43,"t":{"74":{"position":[[506,3]]},"84":{"position":[[561,3]]},"86":{"position":[[503,3],[871,3]]},"110":{"position":[[468,3]]},"112":{"position":[[459,3]]}}}],["next",{"_index":170,"t":{"92":{"position":[[297,5]]},"116":{"position":[[200,18],[459,5]]}}}],["npm",{"_index":179,"t":{"98":{"position":[[211,24],[236,3]]}}}],["occam",{"_index":315,"t":{"108":{"position":[[565,5]]}}}],["ocx",{"_index":316,"t":{"108":{"position":[[571,3]]}}}],["option",{"_index":53,"t":{"74":{"position":[[604,11],[645,11]]},"86":{"position":[[597,11],[637,11]]},"112":{"position":[[552,11],[591,11]]}}}],["pragma",{"_index":68,"t":{"76":{"position":[[463,6]]},"88":{"position":[[464,6]]}}}],["protocol",{"_index":201,"t":{"100":{"position":[[632,9],[791,9],[1200,8]]}}}],["protocolmag",{"_index":195,"t":{"100":{"position":[[339,13],[884,14],[1184,13]]}}}],["protocolmagic.devnet",{"_index":210,"t":{"100":{"position":[[899,21]]}}}],["protocolnames.cardanoprotocol",{"_index":202,"t":{"100":{"position":[[642,30]]}}}],["protocolnames.evmprotocol",{"_index":208,"t":{"100":{"position":[[801,26]]}}}],["receive（受け取る）」ウィンドウで「copi",{"_index":151,"t":{"90":{"position":[[149,26]]}}}],["registri",{"_index":305,"t":{"108":{"position":[[201,53]]}}}],["registry.testnet.networkid",{"_index":205,"t":{"100":{"position":[[700,27]]}}}],["registry.testnet.networkmag",{"_index":207,"t":{"100":{"position":[[742,29]]}}}],["remix",{"_index":61,"t":{"76":{"position":[[54,32],[87,34],[122,5],[1191,5]]},"88":{"position":[[55,32],[88,34],[123,5],[1191,5]]}}}],["remixウィンドウの左パネルで「contracts（コントラクト）」フォルダーをクリックして、次に中央パネルの「new",{"_index":63,"t":{"76":{"position":[[166,60]]},"88":{"position":[[167,60]]}}}],["requir",{"_index":185,"t":{"98":{"position":[[456,13]]}}}],["require(\"@dcspark/milkomeda",{"_index":188,"t":{"98":{"position":[[493,27]]}}}],["rest",{"_index":230,"t":{"102":{"position":[[119,4],[963,4]]}}}],["rider",{"_index":351,"t":{"108":{"position":[[1310,6]]}}}],["rollup",{"_index":25,"t":{"72":{"position":[[23,6],[83,6],[151,6]]},"74":{"position":[[86,17]]},"76":{"position":[[1139,26]]},"78":{"position":[[336,18]]},"80":{"position":[[134,29],[576,6]]}}}],["rollup.a1.milkomeda.com",{"_index":47,"t":{"74":{"position":[[547,23],[682,23]]}}}],["rollupからのトランザクションは、algorand",{"_index":113,"t":{"80":{"position":[[262,27]]}}}],["rpc",{"_index":44,"t":{"74":{"position":[[510,3]]},"86":{"position":[[507,3],[875,3]]},"112":{"position":[[463,3]]}}}],["run",{"_index":88,"t":{"76":{"position":[[905,3]]},"88":{"position":[[905,3]]}}}],["save**（保存）」をクリックすると、ネットワークドロップダウンに「**milkomeda",{"_index":58,"t":{"74":{"position":[[706,49]]},"112":{"position":[[657,49]]}}}],["save（保存）」をクリックすると、ネットワークドロップダウンに「milkomeda",{"_index":145,"t":{"86":{"position":[[1130,43]]}}}],["sdk",{"_index":177,"t":{"98":{"position":[[16,17],[47,24],[193,17],[264,3],[325,3],[450,5],[524,6]]},"102":{"position":[[54,21]]}}}],["sdkは、milkomeda",{"_index":189,"t":{"100":{"position":[[13,40]]}}}],["sdkを使ってbackendendpoint",{"_index":232,"t":{"102":{"position":[[148,38]]}}}],["sdkパッケージを使ってmilkomeda上でweb3",{"_index":175,"t":{"96":{"position":[[18,48]]}}}],["send",{"_index":111,"t":{"80":{"position":[[202,34]]},"104":{"position":[[197,40]]},"114":{"position":[[211,40]]}}}],["service/）の目的は、milkomeda",{"_index":243,"t":{"102":{"position":[[628,52]]}}}],["sidechain",{"_index":192,"t":{"100":{"position":[[217,9],[778,10]]}}}],["sidechaincontract",{"_index":197,"t":{"100":{"position":[[452,17],[957,18]]}}}],["sign",{"_index":110,"t":{"80":{"position":[[188,9]]}}}],["skip（スキップ）」を選択して問題ありません。次に「finish",{"_index":133,"t":{"84":{"position":[[682,65]]},"110":{"position":[[589,65]]}}}],["solc",{"_index":73,"t":{"76":{"position":[[562,4]]},"88":{"position":[[563,4]]}}}],["solid",{"_index":62,"t":{"76":{"position":[[132,33],[253,46],[412,36],[470,8],[732,22]]},"88":{"position":[[133,33],[254,46],[413,36],[471,8],[733,22]]}}}],["solidityスマートコントラクトをmilkomeda",{"_index":60,"t":{"76":{"position":[[0,28]]},"88":{"position":[[0,28]]}}}],["solidity（evm）のサポートを提供し、その後cairo",{"_index":13,"t":{"66":{"position":[[211,43]]}}}],["specif",{"_index":217,"t":{"100":{"position":[[1219,8]]}}}],["stargat",{"_index":236,"t":{"102":{"position":[[364,8],[723,8]]}}}],["started（開始する）」をクリックして、次に「cr",{"_index":38,"t":{"74":{"position":[[236,31]]},"86":{"position":[[234,31]]},"112":{"position":[[193,31]]}}}],["step",{"_index":171,"t":{"92":{"position":[[303,21]]},"116":{"position":[[465,21]]}}}],["sunda",{"_index":334,"t":{"108":{"position":[[970,6]]}}}],["sundaeswap",{"_index":333,"t":{"108":{"position":[[959,10]]}}}],["symbol",{"_index":52,"t":{"74":{"position":[[597,6]]},"86":{"position":[[590,6],[957,7]]},"112":{"position":[[545,6]]}}}],["tada)（テストネットフォーセット（tada",{"_index":155,"t":{"90":{"position":[[267,36]]}}}],["tada」を選択し、「address（アドレス）」欄にcardano",{"_index":156,"t":{"90":{"position":[[347,53]]}}}],["talgo",{"_index":107,"t":{"80":{"position":[[64,36]]}}}],["test_erc20.sol",{"_index":86,"t":{"76":{"position":[[865,24]]},"88":{"position":[[865,24]]}}}],["testnet",{"_index":31,"t":{"72":{"position":[[191,18]]},"74":{"position":[[78,7],[498,7],[765,18],[824,32]]},"78":{"position":[[0,22],[65,9]]},"80":{"position":[[290,27],[529,20]]},"82":{"position":[[76,22]]},"84":{"position":[[763,20]]},"86":{"position":[[495,7],[1182,16],[1238,32]]},"90":{"position":[[333,13],[401,25]]},"92":{"position":[[271,25]]},"104":{"position":[[321,20],[1167,39]]}}}],["testnetからcardano",{"_index":165,"t":{"92":{"position":[[50,39]]}}}],["testnetからの資産をラッピングし、手数料やガス用にラッピングされたテストadaを使ってmilkomeda",{"_index":20,"t":{"70":{"position":[[92,55]]}}}],["testnetでmilktadaのラッピングを解除して、tada",{"_index":148,"t":{"88":{"position":[[1271,46]]}}}],["testnetで使用するため、テストalgoをmilktalgo",{"_index":117,"t":{"80":{"position":[[583,75]]}}}],["testnetのみですが、広範囲にわたるqaと主要な監査による最終確認の後、今四半期中にalgorand",{"_index":26,"t":{"72":{"position":[[30,52]]}}}],["testnetウォレットでtada",{"_index":167,"t":{"92":{"position":[[126,27],[377,38]]}}}],["testnetウォレットにtada",{"_index":162,"t":{"90":{"position":[[525,25]]}}}],["testnetウォレットにtalgo",{"_index":102,"t":{"78":{"position":[[271,26]]}}}],["testnetウォレットのアドレスをクリップボードにコピーし、以下の通り、画面下部の「testnet",{"_index":153,"t":{"90":{"position":[[209,50]]}}}],["testnetウォレットを作成し、「milkomedaモード」を有効にして、milkomeda",{"_index":124,"t":{"84":{"position":[[78,47]]}}}],["testnetウォレットを作成してテストadaを取得したら、milkomeda",{"_index":136,"t":{"86":{"position":[[8,39]]}}}],["testnetサイドチェーンで使用できるよう、テストadaをmilktada",{"_index":287,"t":{"104":{"position":[[1013,86]]}}}],["testnetサイドチェーン上でmilktada",{"_index":137,"t":{"86":{"position":[[56,45]]}}}],["testnetフォーセットからテストada",{"_index":23,"t":{"70":{"position":[[221,30]]},"90":{"position":[[8,35]]}}}],["testnetフォーセットにアクセスして、テストada",{"_index":135,"t":{"84":{"position":[[794,36]]}}}],["testnet）は、テストalgoを用いて正式なalgorand",{"_index":30,"t":{"72":{"position":[[158,32]]}}}],["tether",{"_index":342,"t":{"108":{"position":[[1161,6]]}}}],["timeintervalforaddressm",{"_index":196,"t":{"100":{"position":[[393,24],[921,25]]}}}],["tkn",{"_index":80,"t":{"76":{"position":[[661,6]]},"88":{"position":[[662,6]]}}}],["toadafeegwei",{"_index":260,"t":{"102":{"position":[[1231,15]]}}}],["tochainid",{"_index":203,"t":{"100":{"position":[[677,11]]}}}],["token",{"_index":76,"t":{"76":{"position":[[614,5],[1331,33],[1376,26]]},"88":{"position":[[615,5]]},"108":{"position":[[195,5],[833,5],[1317,5]]}}}],["transactions（トランザクションのデプロイと実行）」アイコンをクリックして、以下のとおり「environment（環境）」プルダウンから「inject",{"_index":89,"t":{"76":{"position":[[909,82]]},"88":{"position":[[909,82]]}}}],["ttl_expiri",{"_index":253,"t":{"102":{"position":[[1135,13]]}}}],["twitter",{"_index":383,"t":{"120":{"position":[[0,9]]}}}],["uint256(decim",{"_index":84,"t":{"76":{"position":[[705,22]]},"88":{"position":[[706,22]]}}}],["unwrap",{"_index":163,"t":{"92":{"position":[[18,6],[177,6]]},"108":{"position":[[1395,6]]},"116":{"position":[[55,6],[159,6]]}}}],["url",{"_index":45,"t":{"74":{"position":[[514,4],[641,3]]},"86":{"position":[[511,4],[633,3],[879,4],[988,4]]},"100":{"position":[[295,43]]},"102":{"position":[[322,41],[681,41]]},"112":{"position":[[467,4],[587,3]]},"116":{"position":[[293,31]]}}}],["usd",{"_index":346,"t":{"108":{"position":[[1234,3]]}}}],["usd(nomad",{"_index":343,"t":{"108":{"position":[[1168,10]]}}}],["usdc",{"_index":348,"t":{"108":{"position":[[1250,4]]}}}],["usdt",{"_index":344,"t":{"108":{"position":[[1179,4]]}}}],["v1/fullallowedlist",{"_index":245,"t":{"102":{"position":[[771,21]]}}}],["v1/isaddressallowed?address=0x",{"_index":249,"t":{"102":{"position":[[871,33]]}}}],["v1/stargat",{"_index":237,"t":{"102":{"position":[[381,13],[740,14]]}}}],["wada",{"_index":296,"t":{"104":{"position":[[1559,25],[1658,4]]}}}],["wadaのラッピングを解除するにはdex",{"_index":297,"t":{"104":{"position":[[1585,72]]}}}],["wallet",{"_index":39,"t":{"74":{"position":[[270,24]]},"84":{"position":[[565,45],[655,26]]},"86":{"position":[[268,24]]},"110":{"position":[[472,45],[562,26]]},"112":{"position":[[227,24]]}}}],["wallet.com",{"_index":235,"t":{"102":{"position":[[311,10],[482,10]]}}}],["wbtc",{"_index":340,"t":{"108":{"position":[[1106,4]]}}}],["wbtc(nomad",{"_index":339,"t":{"108":{"position":[[1094,11]]}}}],["web3",{"_index":90,"t":{"76":{"position":[[992,12]]},"88":{"position":[[992,12]]}}}],["web3ウォレットやその他のdappをmilkomeda",{"_index":173,"t":{"94":{"position":[[0,36]]}}}],["websocketエンドポイントが必要な場合は、次を使用します。wss://rpc",{"_index":142,"t":{"86":{"position":[[702,41],[1047,41]]}}}],["weth",{"_index":337,"t":{"108":{"position":[[1039,4]]}}}],["weth(nomad",{"_index":336,"t":{"108":{"position":[[1027,11]]}}}],["wing",{"_index":350,"t":{"108":{"position":[[1305,4]]}}}],["wmt",{"_index":328,"t":{"108":{"position":[[839,3]]}}}],["world",{"_index":326,"t":{"108":{"position":[[820,5]]}}}],["wrap",{"_index":369,"t":{"114":{"position":[[1100,7]]}}}],["wrt",{"_index":352,"t":{"108":{"position":[[1323,3]]}}}],["wtada",{"_index":292,"t":{"104":{"position":[[1315,26],[1453,16]]}}}],["yarn",{"_index":181,"t":{"98":{"position":[[268,25],[294,4]]}}}]],"pipeline":["stemmer"]}}]