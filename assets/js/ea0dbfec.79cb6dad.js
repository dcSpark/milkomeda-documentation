"use strict";(self.webpackChunkmilkomeda_documentation=self.webpackChunkmilkomeda_documentation||[]).push([[7163],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=d(n),p=a,m=g["".concat(s,".").concat(p)]||g[p]||c[p]||r;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>f,frontMatter:()=>d,metadata:()=>c,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const r=n.p+"assets/images/myalgowallet-7220db4a828f3c112bd044a1c337e431.png",i=n.p+"assets/images/mnemonicphrase-957edb74d24853c6d5d359a47d0ff2f3.png";var l=n(5014),s=n(6559);const d={sidebar_position:1},u="Configuring Algorand Wallet",c={unversionedId:"algorand/for-end-users/obtaining-test-algo",id:"algorand/for-end-users/obtaining-test-algo",title:"Configuring Algorand Wallet",description:"In order to interact with the Milkomeda Algorand Rollup Bridge, you need to configure a native Algorand wallet. We recommend using MyAlgo wallet to setup a wallet compatible with the Milkomeda A1 Bridge DApp (used for moving assets between Mainchain and Rollup).",source:"@site/docs/algorand/for-end-users/obtaining-test-algo.mdx",sourceDirName:"algorand/for-end-users",slug:"/algorand/for-end-users/obtaining-test-algo",permalink:"/milkomeda-documentation/algorand/for-end-users/obtaining-test-algo",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"For End-users",permalink:"/milkomeda-documentation/algorand/for-end-users/"},next:{title:"Configuring MetaMask",permalink:"/milkomeda-documentation/algorand/for-end-users/configuring-metamask"}},g={},p=[{value:"Configuring Your MyAlgo Wallet",id:"configuring-your-myalgo-wallet",level:3},{value:"Obtaining ALGO",id:"obtaining-algo",level:3},{value:"Obtaining testnet Algo",id:"obtaining-testnet-algo",level:4}],m={toc:p};function f(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuring-algorand-wallet"},"Configuring Algorand Wallet"),(0,a.kt)("p",null,"In order to interact with the ",(0,a.kt)("strong",{parentName:"p"},"Milkomeda Algorand Rollup Bridge"),", you need to configure a native Algorand wallet. We recommend using MyAlgo wallet to setup a wallet compatible with the Milkomeda A1 Bridge DApp (used for moving assets between Mainchain and Rollup)."),(0,a.kt)("h3",{id:"configuring-your-myalgo-wallet"},"Configuring Your MyAlgo Wallet"),(0,a.kt)("p",null,"First, go to ",(0,a.kt)("a",{parentName:"p",href:"https://wallet.myalgo.com/new-account"},"https://wallet.myalgo.com/new-account"),". After accepting the ",(0,a.kt)("em",{parentName:"p"},"Terms of Service")," click ",(0,a.kt)("em",{parentName:"p"},"Continue")," to start configuring your wallet. In the next step you will be asked to create a password. Then you should ",(0,a.kt)("strong",{parentName:"p"},"create a new randomly generated account"),"."),(0,a.kt)("img",{src:r,className:"img-full",alt:""}),(0,a.kt)("p",null,"In the next step you will be asked to save the Mnemonic Phrase."),(0,a.kt)("img",{src:i,className:"img-full",alt:""}),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Remember to take note of the following Mnemonic Phrase words in the correct order. They are the recovery phrase for your new account.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Do not share these words with anyone! These words can be used to steal all your funds.")),(0,a.kt)("p",null,"Once you've successfully verified the Mnemonic Phrase your MyAlgo wallet has been configured and all that's left to do is to give your wallet a name of your choosing."),(0,a.kt)("h3",{id:"obtaining-algo"},"Obtaining ALGO"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"To interact with the Bridge DApp you need to have the Algorand native token, ALGO. "),"\nTo obtain mainnet Algorand tokens, you can purchase them from various cryptocurrency exchanges, using fiat currency or other cryptocurrencies or using ramping services. Additionally, Algorand also offers a testnet faucet, which allows users to obtain testnet tokens for development and testing purposes. ",(0,a.kt)("strong",{parentName:"p"},"However, it is important to note that testnet tokens hold no value and cannot be used on the mainnet.")),(0,a.kt)("h4",{id:"obtaining-testnet-algo"},"Obtaining testnet Algo"),(0,a.kt)("p",null,"If you would like to test out the Milkomeda Bridge and Bridge DApp with testnet funds before utilizing real mainnet funds, you can get some testnet ALGO from the official testnet dispenser ",(0,a.kt)("a",{parentName:"p",href:"https://testnet.algoexplorer.io/dispenser"},"https://testnet.algoexplorer.io/dispenser"),"."),(0,a.kt)("img",{src:l.Z,className:"img-full",alt:""}),(0,a.kt)("p",null,"Enter your newly created Algorand address and after waiting a few minutes (usually 2 minutes or less), you should be able to see some tALGO in your Algorand Testnet wallet."),(0,a.kt)("img",{src:s.Z,className:"img-full",alt:""}),(0,a.kt)("p",null,"Next we will set up ",(0,a.kt)("strong",{parentName:"p"},"MetaMask Wallet")," and get an address on the ",(0,a.kt)("strong",{parentName:"p"},"Milkomeda A1 Algorand Rollup Mainnet")))}f.isMDXComponent=!0},5014:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/algorand-dispenser-78b7f519ad79c1444ad3744c4121add2.png"},6559:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/algorand-wallet-dashboard-77239174520366b5c99dd71639183326.png"}}]);