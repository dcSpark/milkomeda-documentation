"use strict";(self.webpackChunkmilkomeda_documentation=self.webpackChunkmilkomeda_documentation||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting Started with Milkomeda","href":"/milkomeda-documentation/","docId":"intro"},{"type":"category","label":"Cardano","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"For Developers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Configuring Flint Wallet","href":"/milkomeda-documentation/cardano/for-developers/configuring-flint-for-devs","docId":"cardano/for-developers/configuring-flint-for-devs"},{"type":"link","label":"Obtaining Test ADA","href":"/milkomeda-documentation/cardano/for-developers/obtaining-test-ada","docId":"cardano/for-developers/obtaining-test-ada"},{"type":"link","label":"Configuring MetaMask","href":"/milkomeda-documentation/cardano/for-developers/configuring-metamask-for-devs","docId":"cardano/for-developers/configuring-metamask-for-devs"},{"type":"link","label":"Wrapping Assets","href":"/milkomeda-documentation/cardano/for-developers/wrapping-assets-for-devs","docId":"cardano/for-developers/wrapping-assets-for-devs"},{"type":"link","label":"Unwrapping Assets","href":"/milkomeda-documentation/cardano/for-developers/unwrapping-assets-for-devs","docId":"cardano/for-developers/unwrapping-assets-for-devs"},{"type":"link","label":"Deploying a Smart Contract","href":"/milkomeda-documentation/cardano/for-developers/deploying-a-smart-contract","docId":"cardano/for-developers/deploying-a-smart-contract"},{"type":"link","label":"Wallet Integration","href":"/milkomeda-documentation/cardano/for-developers/wallet-integration","docId":"cardano/for-developers/wallet-integration"}],"href":"/milkomeda-documentation/cardano/for-developers/"},{"type":"category","label":"For End Users","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Configuring Flint Wallet","href":"/milkomeda-documentation/cardano/for-end-users/configuring-flint-wallet","docId":"cardano/for-end-users/configuring-flint-wallet"},{"type":"link","label":"Configuring Metamask","href":"/milkomeda-documentation/cardano/for-end-users/configuring-metamask","docId":"cardano/for-end-users/configuring-metamask"},{"type":"link","label":"Obtaining MilkADA","href":"/milkomeda-documentation/cardano/for-end-users/obtaining-milkada","docId":"cardano/for-end-users/obtaining-milkada"},{"type":"link","label":"Unwrapping Assets","href":"/milkomeda-documentation/cardano/for-end-users/unwrapping-assets","docId":"cardano/for-end-users/unwrapping-assets"},{"type":"link","label":"Cardano Bridge Supported Native Assets","href":"/milkomeda-documentation/cardano/for-end-users/cardano-bridge-supported-native-assets","docId":"cardano/for-end-users/cardano-bridge-supported-native-assets"}],"href":"/milkomeda-documentation/cardano/for-end-users/"}],"href":"/milkomeda-documentation/category/cardano"},{"type":"category","label":"Algorand","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"For Developers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Obtaining Test ALGO","href":"/milkomeda-documentation/algorand/for-developers/obtaining-test-algo","docId":"algorand/for-developers/obtaining-test-algo"},{"type":"link","label":"Configuring MetaMask","href":"/milkomeda-documentation/algorand/for-developers/configuring-metamask","docId":"algorand/for-developers/configuring-metamask"},{"type":"link","label":"Wrapping Assets","href":"/milkomeda-documentation/algorand/for-developers/wrapping-assets","docId":"algorand/for-developers/wrapping-assets"},{"type":"link","label":"Deploying a Smart Contract","href":"/milkomeda-documentation/algorand/for-developers/deploying-a-smart-contract","docId":"algorand/for-developers/deploying-a-smart-contract"}],"href":"/milkomeda-documentation/algorand/for-developers/"},{"type":"category","label":"For End-users","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Configuring Algorand Wallet and obtaining Test ALGO","href":"/milkomeda-documentation/algorand/for-end-users/obtaining-test-algo","docId":"algorand/for-end-users/obtaining-test-algo"},{"type":"link","label":"Configuring MetaMask","href":"/milkomeda-documentation/algorand/for-end-users/configuring-metamask","docId":"algorand/for-end-users/configuring-metamask"},{"type":"link","label":"Wrapping Assets","href":"/milkomeda-documentation/algorand/for-end-users/wrapping-assets","docId":"algorand/for-end-users/wrapping-assets"},{"type":"link","label":"Unwrapping Assets","href":"/milkomeda-documentation/algorand/for-end-users/unwrapping-assets","docId":"algorand/for-end-users/unwrapping-assets"},{"type":"link","label":"Algorand Standard Assets support","href":"/milkomeda-documentation/algorand/for-end-users/Algorand-Standard-Assets-support","docId":"algorand/for-end-users/Algorand-Standard-Assets-support"},{"type":"link","label":"Algorand Bridge Supported ASA","href":"/milkomeda-documentation/algorand/for-end-users/algorand-bridge-supported-asa","docId":"algorand/for-end-users/algorand-bridge-supported-asa"}],"href":"/milkomeda-documentation/algorand/for-end-users/"}],"href":"/milkomeda-documentation/category/algorand"},{"type":"link","label":"Get Help","href":"/milkomeda-documentation/get-help","docId":"get-help"}]},"docs":{"algorand/for-developers/configuring-metamask":{"id":"algorand/for-developers/configuring-metamask","title":"Configuring MetaMask","description":"Now that we have an Algorand testnet wallet and some Test ALGO, we need an address on the Milkomeda Algorand Testnet Rollup where we can receive our MilkTALGO. For now, we recommend using MetaMask for this step.","sidebar":"tutorialSidebar"},"algorand/for-developers/deploying-a-smart-contract":{"id":"algorand/for-developers/deploying-a-smart-contract","title":"Deploying a Smart Contract","description":"Here we will deploy a Solidity smart contract on the Milkomeda A1 rollup. In this example, we will use Remix to deploy the contract. You can access Remix by visiting the following link: Remix IDE","sidebar":"tutorialSidebar"},"algorand/for-developers/index":{"id":"algorand/for-developers/index","title":"For Developers","description":"Currently, only the Algorand Rollup Testnet is available, but we hope to launch Algorand Rollup Mainnet this quarter after more extensive QA and the finalization of our main audit.","sidebar":"tutorialSidebar"},"algorand/for-developers/obtaining-test-algo":{"id":"algorand/for-developers/obtaining-test-algo","title":"Obtaining Test ALGO","description":"To start we recommend getting some testnet ALGO from the official testnet dispenser https//wallet.myalgo.com/ to setup a testnet wallet compatible with the Milkomeda A1 bridge (required to move funds between Algorand testnet and the Rollup).","sidebar":"tutorialSidebar"},"algorand/for-developers/wrapping-assets":{"id":"algorand/for-developers/wrapping-assets","title":"Wrapping Assets","description":"Go to the Milkomeda A1 bridge page https://algorand-bridge-dev.milkomeda.com/ and select the token that you would like to move (only tALGO for launch). Then connect your MyAlgo wallet and then your Metamask. Last input the amount of tokens that you would like to move to the Rollup. Click \\"Continue\\".","sidebar":"tutorialSidebar"},"algorand/for-end-users/algorand-bridge-supported-asa":{"id":"algorand/for-end-users/algorand-bridge-supported-asa","title":"Algorand Bridge Supported ASA","description":"This section presents all Algorand Standard Assets supported by the Milkomeda Bridge to Algorand. To wrap and unwrap any supported native asset follow the step-by-step tutorial presented in For End Users section by replacing milkAlgo with any token from the table below.","sidebar":"tutorialSidebar"},"algorand/for-end-users/Algorand-Standard-Assets-support":{"id":"algorand/for-end-users/Algorand-Standard-Assets-support","title":"Algorand Standard Assets support","description":"This section gives a brief introduction of the Algorand Standard Assets (ASAs) supported by the Milkomeda A1 Rollup Bridge and how to move ASAs (wrapping or unwrapping) between the Milkomeda A1 Rollup and the mainchain (Algorand).","sidebar":"tutorialSidebar"},"algorand/for-end-users/configuring-metamask":{"id":"algorand/for-end-users/configuring-metamask","title":"Configuring MetaMask","description":"Now that we have an Algorand testnet wallet and some test ALGO, we need an address on the Milkomeda Algorand A1 Rollup testnet where we can receive our MilkTALGO. We recommend using MetaMask for this step.","sidebar":"tutorialSidebar"},"algorand/for-end-users/index":{"id":"algorand/for-end-users/index","title":"For End-users","description":"Milkomeda is a protocol designed to improve blockchain interoperability by delivering EVM capabilities to non-EVM blockchains. This is done by building layer 2 (L2) scaling solutions such as rollups, on which the EVM operates, and connecting these to the non-EVM blockchains, layer 1 (L1), via a permission-less bridge.","sidebar":"tutorialSidebar"},"algorand/for-end-users/obtaining-test-algo":{"id":"algorand/for-end-users/obtaining-test-algo","title":"Configuring Algorand Wallet and obtaining Test ALGO","description":"In order to interact with the Milkomeda Algorand Rollup Bridge, you need to configure a native Algorand wallet. We recommend using MyAlgo wallet to setup a testnet wallet compatible with the Milkomeda A1 Bridge.","sidebar":"tutorialSidebar"},"algorand/for-end-users/unwrapping-assets":{"id":"algorand/for-end-users/unwrapping-assets","title":"Unwrapping Assets","description":"To move assets from the Milkomeda Algorand Rollup back to Algorand (in a process called unwrapping), first go to Milkomeda Bridge dApp.","sidebar":"tutorialSidebar"},"algorand/for-end-users/wrapping-assets":{"id":"algorand/for-end-users/wrapping-assets","title":"Wrapping Assets","description":"In order to transfer assets from Algorand (mainchain) to the Milkomeda A1 Rollup, you need to use our dedicated Bridge dApp.","sidebar":"tutorialSidebar"},"cardano/for-developers/configuring-flint-for-devs":{"id":"cardano/for-developers/configuring-flint-for-devs","title":"Configuring Flint Wallet","description":"Flint Wallet is a Chrome extension that serves as a go-to light wallet for DeFi and NFTs. The current version of Flint allows users to create a Cardano Testnet wallet and enable \\"Milkomeda mode\\" to send transactions to the Milkomeda C1 sidechain.","sidebar":"tutorialSidebar"},"cardano/for-developers/configuring-metamask-for-devs":{"id":"cardano/for-developers/configuring-metamask-for-devs","title":"Configuring MetaMask","description":"Now that we have a Cardano testnet wallet and some Test ADA, we need an address on the Milkomeda Cardano Testnet sidechain where we can receive our MilkTADA. For now, we recommend using MetaMask for this step.","sidebar":"tutorialSidebar"},"cardano/for-developers/deploying-a-smart-contract":{"id":"cardano/for-developers/deploying-a-smart-contract","title":"Deploying a Smart Contract","description":"Here we will deploy a Solidity smart contract on the Milkomeda C1 sidechain. In this example, we will use Remix  to deploy the contract. You can access Remix by visiting the following link: Remix IDE\u200b","sidebar":"tutorialSidebar"},"cardano/for-developers/index":{"id":"cardano/for-developers/index","title":"For Developers","description":"Two versions of the Milkomeda C1 sidechain are currently operational. One is the devnet version, which uses test ADA and interacts with the Cardano Testnet. The the other is the mainnet version, which uses real ADA and interacts with the Cardano mainnet.","sidebar":"tutorialSidebar"},"cardano/for-developers/obtaining-test-ada":{"id":"cardano/for-developers/obtaining-test-ada","title":"Obtaining Test ADA","description":"Now we\u2019re ready to get some test ADA from the Cardano testnet faucet.","sidebar":"tutorialSidebar"},"cardano/for-developers/unwrapping-assets-for-devs":{"id":"cardano/for-developers/unwrapping-assets-for-devs","title":"Unwrapping Assets","description":"The Milkomeda Cardano Unwrap Bridge is a tool for moving assets from the Milkomeda Cardano Testnet to Cardano mainnet. Follow the steps below to unwrap milkTADA and receive tADA in your Cardano Testnet wallet.","sidebar":"tutorialSidebar"},"cardano/for-developers/wallet-integration":{"id":"cardano/for-developers/wallet-integration","title":"Wallet integration","description":"Learn how to integrate your web3 wallet or other dApp with Milkomeda","sidebar":"tutorialSidebar"},"cardano/for-developers/wrapping-assets-for-devs":{"id":"cardano/for-developers/wrapping-assets-for-devs","title":"Wrapping Assets","description":"Open the Flint Wallet window and click \\"Send\\". At the next screen, enable the \\"Milkomeda mode\\" toggle, paste your Milkomeda C1 wallet address into the \\"Milkomeda Ethereum Address\\" field, and enter the amount to send (300 Test ADA in this example). Click \\"Continue\\".","sidebar":"tutorialSidebar"},"cardano/for-end-users/cardano-bridge-supported-native-assets":{"id":"cardano/for-end-users/cardano-bridge-supported-native-assets","title":"Cardano Bridge Supported Native Assets","description":"This section presents all native tokens supported by the Milkomeda Bridge to Cardano. To wrap and unwrap any supported native asset follow the step-by-step tutorial presented in For End Users section by replacing milkADA with any token from the table below.","sidebar":"tutorialSidebar"},"cardano/for-end-users/configuring-flint-wallet":{"id":"cardano/for-end-users/configuring-flint-wallet","title":"Configuring Flint Wallet","description":"Flint Wallet is a Chrome extension that serves as a convenient go-to light wallet for DeFi and NFTs. The current","sidebar":"tutorialSidebar"},"cardano/for-end-users/configuring-metamask":{"id":"cardano/for-end-users/configuring-metamask","title":"Configuring Metamask","description":"The next step is to obtain an address on the Milkomeda C1 sidechain where we can receive our MilkADA. For now, we recommend using MetaMask for this step.","sidebar":"tutorialSidebar"},"cardano/for-end-users/index":{"id":"cardano/for-end-users/index","title":"For End Users","description":"The Milkomeda C1 sidechain uses MilkADA as its base asset for paying fees and gas. To access the sidechain, you will need a Cardano wallet with some ADA as well as the MetaMask browser extension.","sidebar":"tutorialSidebar"},"cardano/for-end-users/obtaining-milkada":{"id":"cardano/for-end-users/obtaining-milkada","title":"Obtaining MilkADA","description":"Open the Flint Wallet window and click \\"Send\\". At the next screen, enable the \\"Milkomeda mode\\" toggle, paste the Milkomeda C1 wallet address currently in the clipboard into the \\"Milkomeda Ethereum Address\\" field, and enter the amount to send (1 ADA in this example). Then click \\"Continue\\".","sidebar":"tutorialSidebar"},"cardano/for-end-users/unwrapping-assets":{"id":"cardano/for-end-users/unwrapping-assets","title":"Unwrapping Assets","description":"To move assets from Milkomeda C1 sidechain back to Cardano, use the Milkomeda Cardano Unwrap Bridge. Follow the steps below to unwrap milkADA and receive ADA in your Cardano mainnet wallet.&#x20;","sidebar":"tutorialSidebar"},"get-help":{"id":"get-help","title":"Get Help","description":"We highly recommend joining our channel on discord, where many developers and community members are active and available to provide guidance and support. You can also refer to the Milkomeda FAQ and reach us through our contact page.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Getting Started with Milkomeda","description":"Milkomeda is a groundbreaking new protocol that brings EVM capabilities to non-EVM blockchains. As development progresses, Milkomeda will expand to offer L2 solutions (rollups) for several major blockchains including Cardano, Solana, and Algorand. Currently we have an EVM-based sidechain connected to Cardano - Milkomeda C1 and EVM-based Rollup connected to Algorand - Milkomeda A1.","sidebar":"tutorialSidebar"}}}')}}]);