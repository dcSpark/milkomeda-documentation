"use strict";(self.webpackChunkmilkomeda_documentation=self.webpackChunkmilkomeda_documentation||[]).push([[590],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(f,l(l({ref:t},c),{},{components:n})):o.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9305:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],i={sidebar_label:"Deploying a Smart Contract",sidebar_position:7},p="Deploying a Smart Contract",s={unversionedId:"getting-started/for-developers/deploying-a-smart-contract",id:"getting-started/for-developers/deploying-a-smart-contract",title:"Deploying a Smart Contract",description:"Deploying a Smart Contract",source:"@site/docs/getting-started/for-developers/deploying-a-smart-contract.md",sourceDirName:"getting-started/for-developers",slug:"/getting-started/for-developers/deploying-a-smart-contract",permalink:"/milkomeda-documentation/docs/getting-started/for-developers/deploying-a-smart-contract",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Deploying a Smart Contract",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Unwrapping Assets",permalink:"/milkomeda-documentation/docs/getting-started/for-developers/unwrapping-assets-for-devs"},next:{title:"Wallet Integration",permalink:"/milkomeda-documentation/docs/getting-started/for-developers/wallet-integration"}},c={},u=[],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploying-a-smart-contract"},"Deploying a Smart Contract"),(0,a.kt)("p",null,"Deploying a Smart Contract"),(0,a.kt)("p",null,"Here we will deploy a Solidity smart contract on the Milkomeda C1 sidechain. In this example, we will use Remix ",(0,a.kt)("a",{parentName:"p",href:"http://remix.ethereum.org/"})," to deploy the contract. You can access Remix by visiting the following link: ",(0,a.kt)("a",{parentName:"p",href:"http://remix.ethereum.org/"},"Remix IDE"),"\u200b"),(0,a.kt)("p",null,'First, create the solidity smart contract file. Inside the Remix window, click the "',(0,a.kt)("strong",{parentName:"p"},"Contracts"),'" folder in the left panel, then click the "',(0,a.kt)("strong",{parentName:"p"},"New File"),'" button in the central panel.'),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://219607439-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FiSJiJU03fzOYGsKJ0KBc%2Fuploads%2FNKiJ9DdYuM1NJ2L0dh7n%2Fimage.png?alt=media&token=35d74172-b754-4d48-be95-ef073d01f284",alt:null})),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,'Now you will be prompted to enter a filename for a new Solidity smart contract. The filename is arbitrary, but for the purposes of this example we will be deploying an ERC-20 smart contract so we will name the file "Test_ERC20.sol". Type the filename and press ',(0,a.kt)("strong",{parentName:"p"},"Enter"),". The cursor should move to the edit panel where you can input your Solidity code. Enter the following:"),(0,a.kt)("p",null,"[Enter code here]"),(0,a.kt)("p",null,"}"),(0,a.kt)("p",null,'Next, click the "',(0,a.kt)("strong",{parentName:"p"},"Solidity compiler"),'" icon on the left side of the screen, choose a compiler version (for this example we will use ',(0,a.kt)("strong",{parentName:"p"},"0.7.6+commit.7338295f"),'), and then click "',(0,a.kt)("strong",{parentName:"p"},"Compile Test_ERC20.sol"),'", as shown.'),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://219607439-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FiSJiJU03fzOYGsKJ0KBc%2Fuploads%2FIoiWRjFvQezMi9FQ3q6W%2Fimage.png?alt=media&token=af57900d-42fc-45d3-853b-24c086bf637a",alt:null})),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,'Click the "',(0,a.kt)("strong",{parentName:"p"},"Deploy and run transactions"),'" icon on the left, and from the "',(0,a.kt)("strong",{parentName:"p"},"Environment"),'" pulldown select "',(0,a.kt)("strong",{parentName:"p"},"Injected Web3"),'", as shown. This will bring up the MetaMask screen where you will need to click "',(0,a.kt)("strong",{parentName:"p"},"Next"),'" and then "',(0,a.kt)("strong",{parentName:"p"},"Connect"),'" to connect your C1 wallet with Remix.'),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://219607439-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FiSJiJU03fzOYGsKJ0KBc%2Fuploads%2FubVYYZwoaKEQWQbTxanB%2Fimage.png?alt=media&token=93a2a266-7340-48ae-971a-4078472bd5b9",alt:null})),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,'With your MetaMask wallet now connected, click the "',(0,a.kt)("strong",{parentName:"p"},"Deploy"),'" button to deploy the smart contract to the Milkomeda C1 sidechain.'),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://219607439-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FiSJiJU03fzOYGsKJ0KBc%2Fuploads%2Fx2kpyoDP2jQG2cJIsk2Y%2Fimage.png?alt=media&token=cafd4bb6-299f-4dbf-81e5-14c3526a34ce",alt:null})),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,"Confirm the transaction in MetaMask."),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://219607439-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FiSJiJU03fzOYGsKJ0KBc%2Fuploads%2F4mx8zUc6Uyfqlsp9r4xr%2Fimage.png?alt=media&token=28313a50-494f-4793-a458-9493ff0e109c",alt:null})),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,'You should now see the following under "',(0,a.kt)("strong",{parentName:"p"},"Deployed Contracts"),'" on the left side of the Remix IDE screen.'),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://219607439-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FiSJiJU03fzOYGsKJ0KBc%2Fuploads%2FPgeJrKznRFL8K8ydPYvu%2Fimage.png?alt=media&token=2141353b-734b-40c8-b2e4-7e841d60e2a7",alt:null})),(0,a.kt)("p",null,"\u200b"),(0,a.kt)("p",null,"Finally, let's look at how to unwrap our milkTADA back into tADA on the Cardano Testnet."))}d.isMDXComponent=!0}}]);