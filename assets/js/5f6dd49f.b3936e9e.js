"use strict";(self.webpackChunkmilkomeda_documentation=self.webpackChunkmilkomeda_documentation||[]).push([[6593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5933:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=n(7462),o=(n(7294),n(3905)),a=n(5014),i=n(6559);const l={sidebar_position:1},s="Obtaining Test ALGO",p={unversionedId:"algorand/for-developers/obtaining-test-algo",id:"algorand/for-developers/obtaining-test-algo",title:"Obtaining Test ALGO",description:"Milkomeda A1 Rollup is fully operational on Mainnet, which means that it is currently deployed and connected to production version of the Algorand blockchain.",source:"@site/docs/algorand/for-developers/obtaining-test-algo.mdx",sourceDirName:"algorand/for-developers",slug:"/algorand/for-developers/obtaining-test-algo",permalink:"/milkomeda-documentation/algorand/for-developers/obtaining-test-algo",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Milkomeda A1 Overview",permalink:"/milkomeda-documentation/algorand/for-developers/overview"},next:{title:"Configuring MetaMask",permalink:"/milkomeda-documentation/algorand/for-developers/configuring-metamask"}},c={},d=[],u={toc:d};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"obtaining-test-algo"},"Obtaining Test ALGO"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Milkomeda A1 Rollup is fully operational on Mainnet, which means that it is currently deployed and connected to production version of the Algorand blockchain.")),(0,o.kt)("p",null,"If you are familiar with the EVM stack, you can start interacting with the Milkomeda A1 Rollup on Mainnet right away. However, we recommend starting with the testnet to check your deployments.\nTo start we recommend getting some testnet ALGO from the official testnet dispenser ",(0,o.kt)("a",{parentName:"p",href:"https://testnet.algoexplorer.io/dispenser"},"https://testnet.algoexplorer.io/dispenser"),". Also currently we recommend using Pera Wallet ",(0,o.kt)("a",{parentName:"p",href:"https://web.perawallet.app"},"https://web.perawallet.app")," to setup a testnet wallet compatible with the Milkomeda A1 bridge (required to move funds between Algorand testnet and the Rollup)."),(0,o.kt)("img",{src:a.Z,className:"img-full",alt:""}),(0,o.kt)("p",null,"After waiting a few minutes (usually 2 minutes or less), you should be able to see some tALGO in your Algorand Testnet wallet."),(0,o.kt)("img",{src:i.Z,className:"img-full",alt:""}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Next we will set up MetaMask and get an address on the Milkomeda A1 Algorand Rollup Mainnet.")))}m.isMDXComponent=!0},5014:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/algorand-dispenser-78b7f519ad79c1444ad3744c4121add2.png"},6559:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/algorand-wallet-dashboard-94941b682b3ff2f12cf1dc329759897d.png"}}]);