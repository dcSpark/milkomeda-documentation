"use strict";(self.webpackChunkmilkomeda_documentation=self.webpackChunkmilkomeda_documentation||[]).push([[46],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),k=o,u=m["".concat(s,".").concat(k)]||m[k]||c[k]||r;return n?a.createElement(u,i(i({ref:t},d),{},{components:n})):a.createElement(u,i({ref:t},d))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9152:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={sidebar_label:"Wallet Integration",sidebar_position:6},s="Wallet integration",p={unversionedId:"getting-started/for-developers/wallet-integration",id:"getting-started/for-developers/wallet-integration",title:"Wallet integration",description:"Learn how to integrate your web3 wallet or other dApp with Milkomeda",source:"@site/docs/getting-started/for-developers/wallet-integration.md",sourceDirName:"getting-started/for-developers",slug:"/getting-started/for-developers/wallet-integration",permalink:"/milkomeda-documentation/docs/getting-started/for-developers/wallet-integration",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Wallet Integration",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Unwrapping Assets",permalink:"/milkomeda-documentation/docs/getting-started/for-developers/unwrapping-assets-for-devs"},next:{title:"Deploying a Smart Contract",permalink:"/milkomeda-documentation/docs/getting-started/for-developers/deploying-a-smart-contract"}},d={},c=[],m={toc:c};function k(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wallet-integration"},"Wallet integration"),(0,r.kt)("p",null,"Learn how to integrate your web3 wallet or other dApp with Milkomeda"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Start building the future of decentralized finances")),(0,r.kt)("p",null,"The following article helps to get to know the  ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"milkomeda-js-sdk package"))," allowing developers to integrate web3 wallet on Milkomeda Sidechain."),(0,r.kt)("p",null,"Integrate Wallet with Milkomeda protocol"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Download ",(0,r.kt)("em",{parentName:"li"},"milkomeda-js-sdk package"))),(0,r.kt)("p",null,"Here you can find the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@dcspark/milkomeda-js-sdk"},"_milkomeda-js-sdk packag_e"),". This is a package that hosts static configurations of Milkomeda deployments."),(0,r.kt)("p",null,"This is useful to avoid having each project integrate Milkomeda hard-coding static configurations."),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("em",{parentName:"li"},"milkomeda-js-sdk")," package")),(0,r.kt)("p",null,"To install the package using ",(0,r.kt)("strong",{parentName:"p"},"npm"),":\n",(0,r.kt)("inlineCode",{parentName:"p"},"npm i @dcspark/milkomeda-js-sdk")),(0,r.kt)("p",null,"To install the package using ",(0,r.kt)("strong",{parentName:"p"},"yarn"),":\n",(0,r.kt)("inlineCode",{parentName:"p"},"yarn add @dcspark/milkomeda-js-sdk")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Import the package into your project")),(0,r.kt)("p",null,"Using ",(0,r.kt)("strong",{parentName:"p"},"import:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'import { generateMilkomedaMetadata, milkomedaNetworks } from "@dcspark/milkomeda-js-sdk";')),(0,r.kt)("p",null,"Using ",(0,r.kt)("strong",{parentName:"p"},"require:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'const milkomedaJsSdk = require("@dcspark/milkomeda-js-sdk");')),(0,r.kt)("h2",{id:""}),(0,r.kt)("p",null,"Learn more about ",(0,r.kt)("em",{parentName:"p"},"milkomeda-js-sdk")," package"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Milkomeda-js-sdk")," is a package that hosts static configurations of Milkomeda deployments. This is useful to avoid having each project integrate Milkomeda hard-coding static configurations."),(0,r.kt)("p",null,"Parameter:  Description\n_isMainnet: boolean informing if the specific network configuration is mainnet (e.g. Cardano) or not,"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"mainchain"),": consists of mainchain information such as protocol and its id,\n",(0,r.kt)("em",{parentName:"p"},"sidechain"),": consists of sidechain information such as protocol name (e.g. MilkomedaC1) and sidechain id,\n",(0,r.kt)("em",{parentName:"p"},"backendEndpoint"),": provides URL value for the service, which exposes additional information about a specific version of the sidechain,\n",(0,r.kt)("em",{parentName:"p"},"protocolMagic"),": introduces protocol magic compatible with appropriate Milkomeda network,\n",(0,r.kt)("em",{parentName:"p"},"timeIntervalForAddressMs"),": a time interval of a possible address change defined in milliseconds,\n",(0,r.kt)("em",{parentName:"p"},"sidechainContract"),": address of the sidechain contract to which any client can connect."),(0,r.kt)("h3",{id:"-1"}),(0,r.kt)("p",null,"Example of the exposed payload"),(0,r.kt)("p",null,"Below you can find an example of the exposed payload of one of the Milkomeda Networks (devnet)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-{"},'    [NETWORK_NAME]: {\n        isMainnet: false,\n        name: NETWORK_NAME,\n        mainchain: {\n            protocol: ProtocolNames.cardanoProtocol,\n            id: toChainId({\n                networkId: registry.Testnet.NetworkId,\n                networkMagic: registry.Testnet.NetworkMagic\n            })\n        },\n        sidechain: { protocol: ProtocolNames.evmProtocol, id: 200101 },\n        backendEndpoint: BackendEndpoints.devnet,\n        protocolMagic: ProtocolMagic.devnet,\n        timeIntervalForAddressMs: 86400000,\n        sidechainContract: "0x000000000000000000000000000000000000BbBB"\n    },\n}\n')),(0,r.kt)("p",null,"Additionally, the package introduces helper types and a function that helps to create proper metadata for Milkomeda transactions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# Milkomeda metadata generator\ngenerateMilkomedaMetadata(\n    address, # address is EVM address\n    protocolMagic # protocol magic for specific network\n)\n")),(0,r.kt)("p",null,"The metadata of a transaction consists of two parameters - ",(0,r.kt)("strong",{parentName:"p"},"protocol magic & EVM address"),". Exemplary metadata for ",(0,r.kt)("strong",{parentName:"p"},"testnet")," transaction is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n87: "devnet.cardano-evm.c1"\n88: "0xEVM_TESTNET_ADDRESS"\n}\n')),(0,r.kt)("p",null,"Example of generating Milkomeda metadata for transaction"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'generateMilkomedaMetadata("0x000\u2026", milkomedaNetworks["c1-devnet"].protocolMagic)')),(0,r.kt)("p",null,'Remember to replace "0x000..." with your EVM address'),(0,r.kt)("h2",{id:"-2"}),(0,r.kt)("p",null,"Milkomeda REST API"),(0,r.kt)("p",null,"Except for the ",(0,r.kt)("em",{parentName:"p"},"Milkomeda-js-sdk")," package, we have introduced a REST API that allows to fetch more data regarding the Milkomeda Sidechain itself."),(0,r.kt)("p",null,"In this example, we use the Flint Wallet integration example for a better explanation"),(0,r.kt)("p",null,"Base url for REST API is given as the ",(0,r.kt)("strong",{parentName:"p"},"backendEndpoint")," parameter using ",(0,r.kt)("em",{parentName:"p"},"milkomeda-js-sdk"),". You can take it out from the package using the following code:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Devnet"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'milkomedaNetworks["c1-devnet"].backendEndpoint'),"\nResult: ",(0,r.kt)("a",{parentName:"p",href:"https://allowlist.flint-wallet.com/"},"https://allowlist.flint-wallet.com"),"\nWhen you have the base URL included in your code, you can use one of the following endpoint:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Stargate address")," (",(0,r.kt)("a",{parentName:"li",href:"https://allowlist.flint-wallet.com/v1/stargate"},"V1/stargate"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Mainnet"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'milkomedaNetworks["c1-mainnet"].backendEndpoint'),"\nResult: ",(0,r.kt)("a",{parentName:"p",href:"https://allowlist-mainnet.flint-wallet.com"},"https://allowlist-mainnet.flint-wallet.com")),(0,r.kt)("p",null,"If you want to integrate your Wallet with Milkomeda Mainnet, you need to use another 2 endpoints, to get EVM addresses allowed on the network. The purpose of this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dcSpark/allowedlist-service/"},"microservice")," is to provide a list of addresses that are allowed to use the bridge in Milkomeda."),(0,r.kt)("p",null,"When you have the base URL included in your code, you can use one of the following endpoints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Stargate address")," (",(0,r.kt)("a",{parentName:"li",href:"https://allowlist-mainnet.flint-wallet.com/v1/stargate"},"/V1/stargate"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fullAllowedList")," (",(0,r.kt)("a",{parentName:"li",href:"https://allowlist-mainnet.flint-wallet.com/v1/fullAllowedList"},"/v1/fullAllowedList"),")"),(0,r.kt)("li",{parentName:"ul"},"Returns array of EVM addresses allowed in the mainnet",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'{\n"allowList": ["0x...", "0x..."]\n}\n')))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-   **isAddress=0x** ([/v1/isAddressAllowed?address=0x](https://allowlist-mainnet.flint-wallet.com/v1/isAddressAllowed?address=0x))\n  \nReturns a boolean value, which informs if the  provided address is allowed on the restricted mainnet or not.\n\nUsing Milkomeda REST API stargate endpoint you can get the same properties of the payload for both devnet and mainnet. Below you can find an example payload for devnet:\n\nIf you have any additional questions regarding this article and Milkomeda integration go to [https://www.milkomeda.com/support](https://www.milkomeda.com/support) or visit our [discord server](https://discord.gg/4GSwPJpF) and don\u2019t hesitate to ask us.\n")))}k.isMDXComponent=!0}}]);